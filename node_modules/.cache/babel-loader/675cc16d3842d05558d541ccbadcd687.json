{"ast":null,"code":"import { reactivateSellerAccount, deleteAndCreateSellerAccount } from '@/service/SellerAccountService';\nexport default {\n  name: 'RegisterComponent',\n\n  data() {\n    return {\n      seller: {\n        name: '',\n        emailId: '',\n        contact: '',\n        address: '',\n        password: ''\n      },\n      dismissSecs: 10,\n      dismissCountDown: 0,\n      checkPassword: '',\n      passwordErrorFlag: false,\n      nameErrorFlag: false,\n      addressErrorFlag: false,\n      passwordError: '',\n      contactErrorFlag: false,\n      confirmPasswordErrorFlag: false,\n      emailIdErrorFlag: false,\n      isRegisterSuccess: false,\n      userMessage: \"\"\n    };\n  },\n\n  methods: {\n    showModal() {\n      this.$refs['my-modal'].show();\n    },\n\n    hideModal() {\n      this.$refs['my-modal'].hide();\n    },\n\n    registerNewSeller() {\n      this.nameErrorFlag = false;\n      this.emailIdErrorFlag = false;\n      this.contactErrorFlag = false;\n      this.emailIdErrorFlag = false;\n      this.passwordErrorFlag = false;\n      this.confirmPasswordErrorFlag = false;\n      this.passwordError = '';\n      this.addressErrorFlag = false;\n\n      if (this.seller.name.length < 5) {\n        this.nameErrorFlag = true; // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      console.log(this.seller.emailId);\n\n      if (this.seller.emailId == ' ' || this.seller.emailId.includes('@gmail.com') === false) {\n        this.emailIdErrorFlag = true; // setInterval(()=>{ this.emailIdErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      if (this.seller.contact.length !== 10) {\n        this.contactErrorFlag = true; // setInterval(()=>{ this.contactErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      if (this.seller.address.length < 5) {\n        this.addressErrorFlag = true; // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      if (this.seller.password < 5) {\n        this.passwordErrorFlag = true;\n        this.passwordError = \"Give strong password\";\n        return;\n      }\n\n      if (this.checkPassword != this.seller.password) {\n        console.log(\"inside not match\");\n        console.log(this.checkPassword, \" \", this.seller.password);\n        this.confirmPasswordErrorFlag = true;\n        this.passwordError = \"does not match\";\n        return;\n      } else {\n        console.log(\"inside match\");\n        this.confirmPasswordErrorFlag = false;\n        this.passwordError = \" \";\n      }\n\n      if (this.seller.emailId.includes('@gmail.com') && this.seller.contact.length === 10 && this.checkPassword === this.seller.password) {\n        this.confirmPasswordErrorFlag = false;\n        this.passwordError = \" \";\n        this.contactErrorFlag = this.passwordErrorFlag = false; // this.showAlert()\n\n        this.$store.dispatch('REGISTER_NEW_SELLER', {\n          success: response => {\n            console.log(\"sucessregister\", response);\n\n            if (response.data.message == 'reactivate') {\n              this.showModal();\n            }\n          },\n          error: err => {\n            console.warn(\"New Merchant could not be registered. | \" + err);\n          },\n          seller: this.seller\n        });\n      }\n    },\n\n    reactivate() {\n      var sellerId = this.seller.emailId;\n      reactivateSellerAccount({\n        success: response => {\n          console.log(response); //    this.$router.push({path:\"/login\"})\n        },\n        error: err => {\n          console.warn(err);\n        },\n        payload: sellerId\n      });\n    },\n\n    deleteAndCreateNew() {\n      var seller = this.seller;\n      deleteAndCreateSellerAccount({\n        success: response => {\n          console.log(response);\n        },\n        error: err => {\n          console.warn(err);\n        },\n        payload: seller\n      });\n    },\n\n    countDownChanged(c) {\n      this.dismissCountDown = c;\n\n      if (c == 0) {\n        this.$router.push({\n          path: \"/login\"\n        });\n      }\n    },\n\n    showAlert() {\n      this.dismissCountDown = this.dismissSecs;\n    },\n\n    resetFields() {\n      this.seller = {\n        name: '',\n        emailId: '',\n        contact: '',\n        address: '',\n        password: ''\n      };\n    }\n\n  }\n};","map":{"version":3,"names":["reactivateSellerAccount","deleteAndCreateSellerAccount","name","data","seller","emailId","contact","address","password","dismissSecs","dismissCountDown","checkPassword","passwordErrorFlag","nameErrorFlag","addressErrorFlag","passwordError","contactErrorFlag","confirmPasswordErrorFlag","emailIdErrorFlag","isRegisterSuccess","userMessage","methods","showModal","$refs","show","hideModal","hide","registerNewSeller","length","console","log","includes","$store","dispatch","success","response","message","error","err","warn","reactivate","sellerId","payload","deleteAndCreateNew","countDownChanged","c","$router","push","path","showAlert","resetFields"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/components/scripts/RegisterComponent.js"],"sourcesContent":["import {reactivateSellerAccount, deleteAndCreateSellerAccount} from '@/service/SellerAccountService'\nexport default {\n    name: 'RegisterComponent',\n    data(){\n        return {\n            seller: {\n                name: '',\n                emailId: '',\n                contact: '',\n                address: '',\n                password: ''\n\n            },\n            dismissSecs: 10,\n            dismissCountDown: 0,\n            checkPassword: '',\n            passwordErrorFlag: false,\n            nameErrorFlag:false,\n            addressErrorFlag:false,\n            passwordError:'',\n            contactErrorFlag: false,\n            confirmPasswordErrorFlag: false,\n            emailIdErrorFlag: false,\n            isRegisterSuccess: false,\n            userMessage:\"\"\n        }\n    },\n    methods:{\n        showModal() {\n            this.$refs['my-modal'].show()\n          },\n          hideModal() {\n            this.$refs['my-modal'].hide()\n          },\n        registerNewSeller(){\n            this.nameErrorFlag = false;\n            this.emailIdErrorFlag=false;\n            this.contactErrorFlag=false;\n            this.emailIdErrorFlag=false;\n          \n            this.passwordErrorFlag=false;\n            this.confirmPasswordErrorFlag=false;\n            this.passwordError='';\n            this.addressErrorFlag=false\n            if(this.seller.name.length < 5){\n                this.nameErrorFlag = true;\n                // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n                return;\n            }\n           \n            console.log(this.seller.emailId)\n            if(this.seller.emailId==' '|| this.seller.emailId.includes('@gmail.com') === false){\n                this.emailIdErrorFlag = true;\n               // setInterval(()=>{ this.emailIdErrorFlag = false; }, 2000);\n                return;\n            }\n            if(this.seller.contact.length !== 10){\n                this.contactErrorFlag = true;\n                // setInterval(()=>{ this.contactErrorFlag = false; }, 2000);\n                return;\n            }\n            if(this.seller.address.length < 5){\n                this.addressErrorFlag = true;\n                // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n                return;\n            }\n            if(this.seller.password<5)\n            {\n                this.passwordErrorFlag=true\n                this.passwordError=\"Give strong password\"\n                return\n            }\n            if(this.checkPassword != this.seller.password){\n  console.log(\"inside not match\")\n  console.log(this.checkPassword,\" \",this.seller.password)\n                this.confirmPasswordErrorFlag = true;\n                this.passwordError=\"does not match\"\n                \n                return;\n            }\n            else{\n                console.log(\"inside match\")\n                this.confirmPasswordErrorFlag = false;\n                this.passwordError=\" \"\n            }\n            if(this.seller.emailId.includes('@gmail.com')\n                    && this.seller.contact.length === 10 \n                    && this.checkPassword === this.seller.password){\n                        this.confirmPasswordErrorFlag = false;\n                this.passwordError=\" \"\n                this.contactErrorFlag = this.passwordErrorFlag = false;\n                // this.showAlert()\n                \n                this.$store.dispatch('REGISTER_NEW_SELLER', {\n                    success: (response)=>{\n                        console.log(\"sucessregister\",response);\n                        if(response.data.message=='reactivate')\n                        {\n                            this.showModal()\n                        }\n                        \n                        \n                    },\n                    error: (err)=>{\n                        console.warn(\"New Merchant could not be registered. | \" + err);\n                    },\n                    seller: this.seller\n                })\n            }\n        },\n        reactivate()\n        {\n            var sellerId=this.seller.emailId;\n            reactivateSellerAccount({\n                success: (response)=>{\n                    console.log(response);\n                //    this.$router.push({path:\"/login\"})\n                },\n                error: (err)=>{\n                    console.warn(err);\n                },\n                payload:sellerId\n               \n            })\n        },\n        deleteAndCreateNew()\n        {\n             var  seller= this.seller\n            deleteAndCreateSellerAccount({\n                success: (response)=>{\n                    console.log(response);\n               \n                },\n                error: (err)=>{\n                    console.warn(err);\n                },\n                payload:seller\n               \n            })\n\n        },\n        countDownChanged(c) {\n           \n            this.dismissCountDown = c;\n            if(c==0)\n            {\n                this.$router.push({path:\"/login\"})\n            }\n          },\n          showAlert() {\n            this.dismissCountDown = this.dismissSecs;\n          },\n        resetFields(){\n            this.seller = {\n                name: '',\n                emailId: '',\n                contact: '',\n                address: '',\n                password: ''\n            };\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}