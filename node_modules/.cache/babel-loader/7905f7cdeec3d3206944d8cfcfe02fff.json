{"ast":null,"code":"import { uploadProductViaFile } from '@/service/SellerProductService';\nexport default {\n  name: \"ImportProductComponent\",\n\n  data() {\n    return {\n      dismissSecs: 10,\n      dismissCountDown: 0,\n      userMessage: \"\",\n      csvFileData: [['Samsung A3', 'Hello', 'Mobile', '50000.00', '45', 'imageul.png']],\n      selectedFiles: undefined,\n      files: [],\n      fileError: false,\n      items: [{\n        id: 1,\n        Fields: 'productName',\n        condition: true\n      }, {\n        id: 2,\n        Fields: 'description',\n        condition: true\n      }, {\n        id: 3,\n        Fields: 'category',\n        condition: true\n      }, {\n        id: 4,\n        Fields: 'price',\n        condition: true\n      }, {\n        id: 5,\n        Fields: 'quantity',\n        condition: true\n      }, {\n        id: 6,\n        Fields: 'imageUrl',\n        condition: true\n      }, {\n        id: 7,\n        Fields: 'emailId',\n        condition: false\n      }]\n    };\n  },\n\n  computed: {\n    uploadDisabled() {\n      return this.files.length === 0;\n    }\n\n  },\n  methods: {\n    selectFile() {\n      this.selectedFiles = event.target.files[0];\n    },\n\n    uploadFile() {\n      console.log(\"file upload\");\n      console.log(this.selectedFiles);\n      var sellerId = localStorage.getItem('userId');\n      let formData = new FormData();\n      formData.append(\"file\", this.selectedFiles);\n\n      for (const pair of formData.entries()) {\n        console.log(`${pair[0]}, ${pair[1]}`);\n      }\n\n      this.$store.dispatch('uploadFile', {\n        formData,\n        sellerId\n      });\n    },\n\n    setError(value) {\n      if (value > 10000) {\n        this.fileError = true;\n      }\n    },\n\n    download_csv_file() {\n      //define the heading for each row of the data\n      var csv = 'productName,description,category,price,quantity,imageUrl\\n'; //merge the data with CSV\n\n      this.csvFileData.forEach(function (row) {\n        csv += row.join(',');\n        csv += \"\\n\";\n      }); //display the created CSV data on the web browser \n\n      document.write(csv);\n      var hiddenElement = document.createElement('a');\n      hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n      hiddenElement.target = '_blank'; //provide the name for the CSV file to be downloaded\n\n      hiddenElement.download = 'sampleProduct.csv';\n      hiddenElement.click(); // document.removeElement('a')\n\n      location.reload();\n    },\n\n    addFile(e) {\n      let droppedFiles = e.dataTransfer.files;\n      console.log(droppedFiles);\n      this.files = [];\n\n      if (droppedFiles.size > 10000) {\n        this.files = [];\n        this.fileError = true;\n        return;\n      }\n\n      if (!droppedFiles) return; // this tip, convert FileList to array, credit: https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n\n      [...droppedFiles].forEach(f => {\n        this.files.push(f);\n      });\n      this.$refs.file.value = null;\n    },\n\n    uploadFileNow() {\n      console.log(\"file upload\");\n      console.log(this.selectedFiles);\n      var sellerId = localStorage.getItem('userId');\n      let formData = new FormData();\n      formData.append(\"file\", this.files[0]);\n      console.log(this.files[0]);\n\n      for (const pair of formData.entries()) {\n        console.log(`${pair[0]}, ${pair[1]}`);\n      }\n\n      var payload = {\n        formData,\n        sellerId\n      };\n      uploadProductViaFile({\n        success: ({\n          data\n        }) => {\n          console.log(\"import product\");\n          console.log(data);\n\n          if (data.message == 'success') {\n            this.$refs.file.value = null;\n            this.files = [];\n            this.userMessage = \"Products Added Successfully\";\n          } else {\n            this.userMessage = data.message;\n          }\n\n          this.showAlert();\n        },\n        error: e => {\n          console.warn(e);\n        },\n        payload\n      });\n    },\n\n    countDownChanged(c) {\n      this.dismissCountDown = c;\n\n      if (c == 0) {\n        this.userMessage = \"\";\n      }\n    },\n\n    showAlert() {\n      this.dismissCountDown = this.dismissSecs;\n    },\n\n    addFileInput() {\n      console.log(\"add file\");\n      this.files = [];\n      this.files.push(event.target.files[0]);\n      this.$refs.file.value = null;\n    },\n\n    removeFile(file) {\n      this.files = this.files.filter(f => {\n        return f != file;\n      });\n    },\n\n    upload() {\n      let formData = new FormData();\n      this.files.forEach((f, x) => {\n        formData.append('file' + (x + 1), f);\n      });\n      fetch('https://httpbin.org/post', {\n        method: 'POST',\n        body: formData\n      }).then(res => res.json()).then(res => {\n        console.log('done uploading', res);\n      }).catch(e => {\n        console.error(JSON.stringify(e.message));\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["uploadProductViaFile","name","data","dismissSecs","dismissCountDown","userMessage","csvFileData","selectedFiles","undefined","files","fileError","items","id","Fields","condition","computed","uploadDisabled","length","methods","selectFile","event","target","uploadFile","console","log","sellerId","localStorage","getItem","formData","FormData","append","pair","entries","$store","dispatch","setError","value","download_csv_file","csv","forEach","row","join","document","write","hiddenElement","createElement","href","encodeURI","download","click","location","reload","addFile","e","droppedFiles","dataTransfer","size","f","push","$refs","file","uploadFileNow","payload","success","message","showAlert","error","warn","countDownChanged","c","addFileInput","removeFile","filter","upload","x","fetch","method","body","then","res","json","catch","JSON","stringify"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/components/scripts/ImportProductComponent.js"],"sourcesContent":["import {uploadProductViaFile} from '@/service/SellerProductService'\nexport default{\n    name:\"ImportProductComponent\",\n    data(){\n        return {\n          dismissSecs: 10,\n          dismissCountDown: 0,\n          userMessage:\"\",\n            csvFileData: [\n                ['Samsung A3','Hello','Mobile','50000.00','45','imageul.png'],\n               \n             ],\n             selectedFiles: undefined,\n             files:[],\n             fileError:false,\n             items: [\n               \n                { id:1,Fields:'productName',condition:true },\n                { id:2,Fields: 'description',condition:true },\n                { id:3,Fields: 'category',condition:true},\n                { id:4,Fields:'price' ,condition:true},\n                { id:5,Fields:'quantity' ,condition:true },\n                { id:6,Fields:'imageUrl' ,condition:true },\n                { id:7,Fields:'emailId' ,condition:false }\n              ]\n        }\n\n    },\n    computed: {\n        uploadDisabled() {\n          return this.files.length === 0;\n        }\n      },\n    methods:{\n        selectFile() {\n            this.selectedFiles = event.target.files[0];\n            \n          },\n          uploadFile()\n          {\n            console.log(\"file upload\")\n            console.log(this.selectedFiles)\n            var sellerId=localStorage.getItem('userId');\n              let formData = new FormData();\n              formData.append(\"file\",this.selectedFiles);\n            \n              for (const pair of formData.entries()) {\n                console.log(`${pair[0]}, ${pair[1]}`);\n              }\n              this.$store.dispatch('uploadFile',{formData,sellerId})\n          },\n          setError(value)\n          {\n          if(value>10000)\n          {\n            this.fileError=true\n          }\n          },\n       download_csv_file() {\n\n            //define the heading for each row of the data\n            var csv = 'productName,description,category,price,quantity,imageUrl\\n';\n            \n            //merge the data with CSV\n            this.csvFileData.forEach(function(row) {\n                    csv += row.join(',');\n                    csv += \"\\n\";\n            });\n         \n            //display the created CSV data on the web browser \n            document.write(csv);\n        \n           \n            var hiddenElement = document.createElement('a');\n            hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n            hiddenElement.target = '_blank';\n            \n            //provide the name for the CSV file to be downloaded\n            hiddenElement.download = 'sampleProduct.csv';\n            hiddenElement.click();\n            // document.removeElement('a')\n            location.reload();\n        },\n        addFile(e) {\n            let droppedFiles = e.dataTransfer.files;\n            console.log(droppedFiles)\n            this.files=[];\n            if(droppedFiles.size>10000)\n            {\n              this.files=[];\n              this.fileError=true\n              return\n\n            }\n            \n            if(!droppedFiles) return;\n            // this tip, convert FileList to array, credit: https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n            ([...droppedFiles]).forEach(f => {\n              this.files.push(f);\n            });\n            this.$refs.file.value = null;\n            \n          },\n          uploadFileNow()\n      {\n        console.log(\"file upload\")\n        console.log(this.selectedFiles)\n        var sellerId=localStorage.getItem('userId');\n          let formData = new FormData();\n          formData.append(\"file\",this.files[0]);\n         console.log(this.files[0])\n          for (const pair of formData.entries()) {\n            console.log(`${pair[0]}, ${pair[1]}`);\n          }\n          var payload={\n            formData,\n            sellerId\n        }\n         \n        uploadProductViaFile({\n                \n          success: ({ data }) => {\n              console.log(\"import product\")\n              console.log(data)\n              \n              if(data.message=='success')\n              {\n                this.$refs.file.value = null;\n                this.files=[]\n                this.userMessage=\"Products Added Successfully\"\n                \n              }\n              else{\n                this.userMessage=data.message\n                 \n              }\n              this.showAlert()\n          },\n          error: (e) => {\n             \n              console.warn(e);\n          },\n          payload\n\n      })\n      },\n      countDownChanged(c) {\n           \n        this.dismissCountDown = c;\n        if(c==0)\n        {\n            this.userMessage=\"\"\n        }\n      },\n      showAlert() {\n        this.dismissCountDown = this.dismissSecs;\n      },\n          addFileInput()\n          {\n            console.log(\"add file\")\n            this.files=[];\n            this.files.push(event.target.files[0]) ;\n            this.$refs.file.value = null;\n          },\n          removeFile(file){\n            this.files = this.files.filter(f => {\n              return f != file;\n            });      \n          },\n          upload() {\n            \n            let formData = new FormData();\n            this.files.forEach((f,x) => {\n              formData.append('file'+(x+1), f);\n            });\n            \n            fetch('https://httpbin.org/post', {\n              method:'POST',\n              body: formData\n            })\n            .then(res => res.json())\n            .then(res => {\n               console.log('done uploading', res);\n            })\n            .catch(e => {\n              console.error(JSON.stringify(e.message));\n            });\n            \n          }\n        }\n\n    }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}