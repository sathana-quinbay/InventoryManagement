{"ast":null,"code":"import { getSellerDetails } from '../../service/SellerAccountService';\nexport default {\n  name: \"SellerAccountComponent\",\n\n  data() {\n    return {\n      sellerDetail: [],\n      editButton: false,\n      seller: {\n        name: '',\n        emailId: '',\n        contact: '',\n        address: '',\n        password: ''\n      }\n    };\n  },\n\n  mounted() {\n    getSellerDetails({\n      success: ({\n        data\n      }) => {\n        console.log(data);\n        this.sellerDetail = data.data;\n      },\n      error: e => {\n        console.warn(e);\n      }\n    });\n  },\n\n  methods: {\n    updateSeller() {\n      this.nameErrorFlag = false;\n      this.emailIdErrorFlag = false;\n      this.contactErrorFlag = false;\n      this.emailIdErrorFlag = false;\n      this.passwordErrorFlag = false;\n      this.confirmPasswordErrorFlag = false;\n      this.passwordError = '';\n      this.addressErrorFlag = false;\n\n      if (this.seller.name.length < 5) {\n        this.nameErrorFlag = true; // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      console.log(this.seller.emailId);\n\n      if (this.seller.emailId == ' ' || this.seller.emailId.includes('@gmail.com') === false) {\n        this.emailIdErrorFlag = true; // setInterval(()=>{ this.emailIdErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      if (this.seller.contact.length !== 10) {\n        this.contactErrorFlag = true; // setInterval(()=>{ this.contactErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      if (this.seller.address.length < 5) {\n        this.addressErrorFlag = true; // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      if (this.seller.password < 5) {\n        this.passwordErrorFlag = true;\n        this.passwordError = \"Give strong password\";\n        return;\n      }\n\n      if (this.checkPassword != this.seller.password) {\n        console.log(\"inside not match\");\n        console.log(this.checkPassword, \" \", this.seller.password);\n        this.confirmPasswordErrorFlag = true;\n        this.passwordError = \"does not match\";\n        return;\n      } else {\n        console.log(\"inside match\");\n        this.confirmPasswordErrorFlag = false;\n        this.passwordError = \" \";\n      }\n\n      if (this.seller.emailId.includes('@gmail.com') && this.seller.contact.length === 10 && this.checkPassword === this.seller.password) {\n        this.confirmPasswordErrorFlag = false;\n        this.passwordError = \" \";\n        this.contactErrorFlag = this.passwordErrorFlag = false;\n        this.showAlert();\n        this.$store.dispatch('REGISTER_NEW_SELLER', {\n          sucess: response => {\n            console.log(response);\n            this.isRegisterSuccess = true;\n            setInterval(() => {\n              this.isRegisterSuccess = false;\n            }, 3000);\n            this.resetFields();\n          },\n          error: err => {\n            console.warn(\"New Merchant could not be registered. | \" + err);\n          },\n          seller: this.seller\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"names":["getSellerDetails","name","data","sellerDetail","editButton","seller","emailId","contact","address","password","mounted","success","console","log","error","e","warn","methods","updateSeller","nameErrorFlag","emailIdErrorFlag","contactErrorFlag","passwordErrorFlag","confirmPasswordErrorFlag","passwordError","addressErrorFlag","length","includes","checkPassword","showAlert","$store","dispatch","sucess","response","isRegisterSuccess","setInterval","resetFields","err"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/components/scripts/SellerAccountComponent.js"],"sourcesContent":["import {getSellerDetails} from '../../service/SellerAccountService'\nexport default{\n    name:\"SellerAccountComponent\",\n    data()\n    {\n    return{\n        sellerDetail:[],\n        editButton:false,\n        seller: {\n            name: '',\n            emailId: '',\n            contact: '',\n            address: '',\n            password: ''\n\n        },\n    }\n    },\n    mounted()\n    {\n        getSellerDetails({\n            success: ({ data }) => {\n                console.log(data)\n\n                this.sellerDetail=data.data\n               \n            },\n            error: (e) => {\n               \n                console.warn(e);\n            }\n        })\n    },\n    methods:{\n        updateSeller(){\n            this.nameErrorFlag = false;\n            this.emailIdErrorFlag=false;\n            this.contactErrorFlag=false;\n            this.emailIdErrorFlag=false;\n          \n            this.passwordErrorFlag=false;\n            this.confirmPasswordErrorFlag=false;\n            this.passwordError='';\n            this.addressErrorFlag=false\n            if(this.seller.name.length < 5){\n                this.nameErrorFlag = true;\n                // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n                return;\n            }\n           \n            console.log(this.seller.emailId)\n            if(this.seller.emailId==' '|| this.seller.emailId.includes('@gmail.com') === false){\n                this.emailIdErrorFlag = true;\n               // setInterval(()=>{ this.emailIdErrorFlag = false; }, 2000);\n                return;\n            }\n            if(this.seller.contact.length !== 10){\n                this.contactErrorFlag = true;\n                // setInterval(()=>{ this.contactErrorFlag = false; }, 2000);\n                return;\n            }\n            if(this.seller.address.length < 5){\n                this.addressErrorFlag = true;\n                // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n                return;\n            }\n            if(this.seller.password<5)\n            {\n                this.passwordErrorFlag=true\n                this.passwordError=\"Give strong password\"\n                return\n            }\n            if(this.checkPassword != this.seller.password){\n  console.log(\"inside not match\")\n  console.log(this.checkPassword,\" \",this.seller.password)\n                this.confirmPasswordErrorFlag = true;\n                this.passwordError=\"does not match\"\n                \n                return;\n            }\n            else{\n                console.log(\"inside match\")\n                this.confirmPasswordErrorFlag = false;\n                this.passwordError=\" \"\n            }\n            if(this.seller.emailId.includes('@gmail.com')\n                    && this.seller.contact.length === 10 \n                    && this.checkPassword === this.seller.password){\n                        this.confirmPasswordErrorFlag = false;\n                this.passwordError=\" \"\n                this.contactErrorFlag = this.passwordErrorFlag = false;\n                this.showAlert()\n                \n                this.$store.dispatch('REGISTER_NEW_SELLER', {\n                    sucess: (response)=>{\n                        console.log(response);\n                        \n                        this.isRegisterSuccess = true;\n                        setInterval(()=>{\n                            this.isRegisterSuccess = false;\n                        }, 3000);\n                        this.resetFields();\n                    },\n                    error: (err)=>{\n                        console.warn(\"New Merchant could not be registered. | \" + err);\n                    },\n                    seller: this.seller\n                })\n            }\n        },\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}