{"ast":null,"code":"import { getSellerDetails, updateSellerDetails } from '../../service/SellerAccountService';\nexport default {\n  name: \"SellerAccountComponent\",\n\n  data() {\n    return {\n      sellerDetail: [],\n      editButton: false,\n      seller: {\n        name: '',\n        emailId: '',\n        contact: '',\n        address: '',\n        password: ''\n      },\n      dismissSecs: 10,\n      dismissCountDown: 0,\n      checkPassword: '',\n      passwordErrorFlag: false,\n      nameErrorFlag: false,\n      addressErrorFlag: false,\n      passwordError: '',\n      contactErrorFlag: false,\n      confirmPasswordErrorFlag: false,\n      emailIdErrorFlag: false,\n      isRegisterSuccess: false,\n      userMessage: \"\"\n    };\n  },\n\n  mounted() {\n    getSellerDetails({\n      success: ({\n        data\n      }) => {\n        console.log(data);\n        this.sellerDetail = data.data;\n      },\n      error: e => {\n        console.warn(e);\n      }\n    });\n  },\n\n  methods: {\n    updateSeller() {\n      // this.nameErrorFlag = false;\n      // this.emailIdErrorFlag=false;\n      // this.contactErrorFlag=false;\n      // this.emailIdErrorFlag=false;\n      // this.addressErrorFlag=false\n      // if(this.seller.name.length < 5){\n      //     this.nameErrorFlag = true;\n      //     // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n      //     return;\n      // }\n      // console.log(this.seller.emailId)\n      // if(this.seller.emailId==' '|| this.seller.emailId.includes('@gmail.com') === false){\n      //     this.emailIdErrorFlag = true;\n      //    // setInterval(()=>{ this.emailIdErrorFlag = false; }, 2000);\n      //     return;\n      // }\n      // if(this.seller.contact.length !== 10){\n      //     this.contactErrorFlag = true;\n      //     // setInterval(()=>{ this.contactErrorFlag = false; }, 2000);\n      //     return;\n      // }\n      // if(this.seller.address.length < 5){\n      //     this.addressErrorFlag = true;\n      //     // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n      //     return;\n      // }\n      // if(this.seller.emailId.includes('@gmail.com')\n      //         && this.seller.contact.length === 10 ){\n      // this.contactErrorFlag = this.passwordErrorFlag = false;\n      updateSellerDetails({\n        success: ({\n          data\n        }) => {\n          console.log(data);\n          this.sellerDetail = data.data;\n        },\n        error: e => {\n          console.warn(e);\n        },\n        payload: this.seller\n      }); // }\n    }\n\n  }\n};","map":{"version":3,"names":["getSellerDetails","updateSellerDetails","name","data","sellerDetail","editButton","seller","emailId","contact","address","password","dismissSecs","dismissCountDown","checkPassword","passwordErrorFlag","nameErrorFlag","addressErrorFlag","passwordError","contactErrorFlag","confirmPasswordErrorFlag","emailIdErrorFlag","isRegisterSuccess","userMessage","mounted","success","console","log","error","e","warn","methods","updateSeller","payload"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/components/scripts/SellerAccountComponent.js"],"sourcesContent":["import {getSellerDetails,updateSellerDetails} from '../../service/SellerAccountService'\nexport default{\n    name:\"SellerAccountComponent\",\n    data()\n    {\n    return{\n        sellerDetail:[],\n        editButton:false,\n        seller: {\n            name: '',\n            emailId: '',\n            contact: '',\n            address: '',\n            password: ''\n\n        },\n        dismissSecs: 10,\n        dismissCountDown: 0,\n        checkPassword: '',\n        passwordErrorFlag: false,\n        nameErrorFlag:false,\n        addressErrorFlag:false,\n        passwordError:'',\n        contactErrorFlag: false,\n        confirmPasswordErrorFlag: false,\n        emailIdErrorFlag: false,\n        isRegisterSuccess: false,\n        userMessage:\"\"\n    }\n    },\n    mounted()\n    {\n        getSellerDetails({\n            success: ({ data }) => {\n                console.log(data)\n\n                this.sellerDetail=data.data\n               \n            },\n            error: (e) => {\n               \n                console.warn(e);\n            }\n        })\n    },\n    methods:{\n        updateSeller(){\n            // this.nameErrorFlag = false;\n            // this.emailIdErrorFlag=false;\n            // this.contactErrorFlag=false;\n            // this.emailIdErrorFlag=false;\n            // this.addressErrorFlag=false\n            // if(this.seller.name.length < 5){\n            //     this.nameErrorFlag = true;\n            //     // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n            //     return;\n            // }\n           \n            // console.log(this.seller.emailId)\n            // if(this.seller.emailId==' '|| this.seller.emailId.includes('@gmail.com') === false){\n            //     this.emailIdErrorFlag = true;\n            //    // setInterval(()=>{ this.emailIdErrorFlag = false; }, 2000);\n            //     return;\n            // }\n            // if(this.seller.contact.length !== 10){\n            //     this.contactErrorFlag = true;\n            //     // setInterval(()=>{ this.contactErrorFlag = false; }, 2000);\n            //     return;\n            // }\n            // if(this.seller.address.length < 5){\n            //     this.addressErrorFlag = true;\n            //     // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n            //     return;\n            // }\n         \n            // if(this.seller.emailId.includes('@gmail.com')\n            //         && this.seller.contact.length === 10 ){\n                        \n                // this.contactErrorFlag = this.passwordErrorFlag = false;\n               \n                \n                updateSellerDetails({\n                    success: ({ data }) => {\n                        console.log(data)\n        \n                        this.sellerDetail=data.data\n                       \n                    },\n                    error: (e) => {\n                       \n                        console.warn(e);\n                    }\n                    ,\n                    payload:this.seller\n                })\n            // }\n        },\n    }\n}"],"mappings":"AAAA,SAAQA,gBAAR,EAAyBC,mBAAzB,QAAmD,oCAAnD;AACA,eAAc;EACVC,IAAI,EAAC,wBADK;;EAEVC,IAAI,GACJ;IACA,OAAM;MACFC,YAAY,EAAC,EADX;MAEFC,UAAU,EAAC,KAFT;MAGFC,MAAM,EAAE;QACJJ,IAAI,EAAE,EADF;QAEJK,OAAO,EAAE,EAFL;QAGJC,OAAO,EAAE,EAHL;QAIJC,OAAO,EAAE,EAJL;QAKJC,QAAQ,EAAE;MALN,CAHN;MAWFC,WAAW,EAAE,EAXX;MAYFC,gBAAgB,EAAE,CAZhB;MAaFC,aAAa,EAAE,EAbb;MAcFC,iBAAiB,EAAE,KAdjB;MAeFC,aAAa,EAAC,KAfZ;MAgBFC,gBAAgB,EAAC,KAhBf;MAiBFC,aAAa,EAAC,EAjBZ;MAkBFC,gBAAgB,EAAE,KAlBhB;MAmBFC,wBAAwB,EAAE,KAnBxB;MAoBFC,gBAAgB,EAAE,KApBhB;MAqBFC,iBAAiB,EAAE,KArBjB;MAsBFC,WAAW,EAAC;IAtBV,CAAN;EAwBC,CA5BS;;EA6BVC,OAAO,GACP;IACIvB,gBAAgB,CAAC;MACbwB,OAAO,EAAE,CAAC;QAAErB;MAAF,CAAD,KAAc;QACnBsB,OAAO,CAACC,GAAR,CAAYvB,IAAZ;QAEA,KAAKC,YAAL,GAAkBD,IAAI,CAACA,IAAvB;MAEH,CANY;MAObwB,KAAK,EAAGC,CAAD,IAAO;QAEVH,OAAO,CAACI,IAAR,CAAaD,CAAb;MACH;IAVY,CAAD,CAAhB;EAYH,CA3CS;;EA4CVE,OAAO,EAAC;IACJC,YAAY,GAAE;MACV;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MAEI;MAGA9B,mBAAmB,CAAC;QAChBuB,OAAO,EAAE,CAAC;UAAErB;QAAF,CAAD,KAAc;UACnBsB,OAAO,CAACC,GAAR,CAAYvB,IAAZ;UAEA,KAAKC,YAAL,GAAkBD,IAAI,CAACA,IAAvB;QAEH,CANe;QAOhBwB,KAAK,EAAGC,CAAD,IAAO;UAEVH,OAAO,CAACI,IAAR,CAAaD,CAAb;QACH,CAVe;QAYhBI,OAAO,EAAC,KAAK1B;MAZG,CAAD,CAAnB,CAnCM,CAiDV;IACH;;EAnDG;AA5CE,CAAd"},"metadata":{},"sourceType":"module"}