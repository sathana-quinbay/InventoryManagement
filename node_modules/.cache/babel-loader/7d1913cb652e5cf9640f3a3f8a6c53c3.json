{"ast":null,"code":"import { registerNewSeller, getSellerById } from '@/service/RegisterSellerService';\nimport { getAllSellers, disbaleSeller, getSellerFromSearch, getSellerFromSort } from '@/service/AdminService';\nexport default {\n  state: {\n    sellers: [],\n    sellerId: localStorage.getItem('userId') || null\n  },\n  getters: {\n    getSellers(state) {\n      return state.sellers;\n    },\n\n    getSellerId(state) {\n      return state.sellerId;\n    },\n\n    getSpecificSeller(state, userId) {\n      let i = 0;\n\n      while (i < state.sellers.length) {\n        if (state.sellers[i].userId == userId) return state.sellers[i];\n      }\n\n      return []; // return state.sellers[];    \n    }\n\n  },\n  mutations: {\n    setSellerId(state, newSellerId) {\n      state.sellerId = newSellerId;\n    },\n\n    setSellers(state, newSellers) {\n      state.sellers = newSellers;\n    },\n\n    addNewSeller(state, newSeller) {\n      state.sellers.push(newSeller);\n    }\n\n  },\n  actions: {\n    REGISTER_NEW_SELLER({\n      commit\n    }, {\n      success,\n      error,\n      seller\n    }) {\n      rç({\n        success: response => {\n          commit('addNewSeller', seller);\n          success && success(response);\n        },\n        error: err => {\n          error && error(err);\n        },\n        seller\n      });\n    },\n\n    GET_ALL_SELLERS({\n      commit\n    }) {\n      getAllSellers({\n        success: response => {\n          commit('setSellers', response.data.data);\n          console.log(response.data.data);\n        },\n        error: err => {\n          commit('setSellers', []);\n          console.warn('No sellers could be fetched from SELLERS API ' + err);\n        }\n      });\n    },\n\n    DISABLE_SELLER({\n      dispatch\n    }, userId) {\n      disbaleSeller({\n        success: response => {\n          console.log(response);\n          console.warn(`Seller: ${userId} is now disabled from the portal`);\n          dispatch('GET_ALL_SELLERS', {\n            success: () => {},\n            error: () => {}\n          });\n        },\n        error: err => {\n          console.warn(err);\n        },\n        userId\n      });\n    },\n\n    GET_SELLER_BY_ID(context, {\n      success,\n      error,\n      userId\n    }) {\n      getSellerById({\n        success: response => {\n          success && success(response);\n        },\n        error: err => {\n          error && error(err);\n        },\n        userId\n      });\n    },\n\n    GET_SELLER_FROM_SEARCH(state, payload) {\n      getSellerFromSearch({\n        success: response => {\n          this.commit('setSellers', response.data.data);\n        },\n        error: err => {\n          console.warn(err);\n        },\n        payload\n      });\n    },\n\n    GET_SELLER_FROM_SORT(state, payload) {\n      getSellerFromSort({\n        success: response => {\n          console.log(\"store response initiated for sort\");\n          this.commit('setSellers', response.data.data);\n        },\n        error: err => {\n          console.warn(err);\n        },\n        payload\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["registerNewSeller","getSellerById","getAllSellers","disbaleSeller","getSellerFromSearch","getSellerFromSort","state","sellers","sellerId","localStorage","getItem","getters","getSellers","getSellerId","getSpecificSeller","userId","i","length","mutations","setSellerId","newSellerId","setSellers","newSellers","addNewSeller","newSeller","push","actions","REGISTER_NEW_SELLER","commit","success","error","seller","rç","response","err","GET_ALL_SELLERS","data","console","log","warn","DISABLE_SELLER","dispatch","GET_SELLER_BY_ID","context","GET_SELLER_FROM_SEARCH","payload","GET_SELLER_FROM_SORT"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/store/sellerStore.js"],"sourcesContent":["import {registerNewSeller, getSellerById} from '@/service/RegisterSellerService'\nimport  {getAllSellers,disbaleSeller,getSellerFromSearch,getSellerFromSort} from '@/service/AdminService';\n\nexport default {\n    state: {\n        sellers: [],\n        sellerId: localStorage.getItem('userId') || null,\n    },\n    getters:{\n        getSellers(state){\n            return state.sellers;\n        },\n        getSellerId(state){\n            return state.sellerId;\n        },\n        getSpecificSeller(state, userId){\n            let i = 0;\n            while(i< state.sellers.length){\n                if(state.sellers[i].userId == userId)\n                    return state.sellers[i];\n            }\n            return [];\n            // return state.sellers[];    \n        }\n    },\n    mutations:{\n        setSellerId(state, newSellerId){\n            state.sellerId = newSellerId;\n        },\n        setSellers(state,newSellers){\n            state.sellers = newSellers;\n        },\n        addNewSeller(state, newSeller){\n            state.sellers.push(newSeller);\n        }\n    },\n    actions:{\n        REGISTER_NEW_SELLER({commit}, {success, error, seller}){\n            rç({\n                success: (response)=>{\n                    commit('addNewSeller', seller);\n                    success && success(response);\n                },\n                error: (err)=>{\n                    error && error(err);\n                },\n                seller\n            })\n        },\n        GET_ALL_SELLERS({commit}){\n            getAllSellers({\n                success: (response)=>{\n                    commit('setSellers', response.data.data);\n                    console.log(response.data.data);\n                },\n                error: (err)=>{\n                    commit('setSellers', []);\n                    console.warn('No sellers could be fetched from SELLERS API ' + err);\n                }\n            })\n        },\n        DISABLE_SELLER({dispatch}, userId){\n            disbaleSeller({\n                success: (response)=>{\n                    console.log(response);\n                    console.warn(`Seller: ${userId} is now disabled from the portal`);\n                    dispatch('GET_ALL_SELLERS', {\n                        success: ()=>{},\n                        error: ()=>{}\n                    });\n                \n                },\n                error: (err)=>{\n                    console.warn(err);\n                },\n                userId\n            })\n        },\n        GET_SELLER_BY_ID(context, {success, error, userId}){\n            getSellerById({\n                success: (response)=>{\n                    success && success(response);\n                },\n                error: (err)=>{\n                    error && error(err);\n                },\n                userId\n            })\n        },\n        GET_SELLER_FROM_SEARCH(state,payload){\n            getSellerFromSearch({\n                success: (response)=>{\n                    this.commit('setSellers', response.data.data);\n                },\n                error: (err)=>{\n                    console.warn(err);\n                },\n                payload\n            })\n        },\n        GET_SELLER_FROM_SORT(state,payload){\n            getSellerFromSort({\n                success: (response)=>{\n                    console.log(\"store response initiated for sort\");\n                    this.commit('setSellers', response.data.data);\n                },\n                error: (err)=>{\n                    console.warn(err);\n                },\n                payload\n            })\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}