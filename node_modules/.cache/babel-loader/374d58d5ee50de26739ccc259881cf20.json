{"ast":null,"code":"import { mapGetters } from \"vuex\";\nexport default {\n  name: 'LoginComponent',\n\n  mounted() {\n    console.log(this.$route.params);\n  },\n\n  data() {\n    return {\n      dismissSecs: 10,\n      dismissCountDown: 0,\n      user: {\n        emailId: '',\n        password: ''\n      },\n      error: {\n        errorStatus: false,\n        errorMessage: \"\"\n      },\n      errorFlag: {\n        passwordErrorFlag: false,\n        usernameErrorFlag: false\n      },\n      loginButtonClass: 'login-button',\n      resetButtonClass: 'reset-button',\n      userMessage: \"\"\n    };\n  },\n\n  computed: { ...mapGetters({\n      isloggedIn: 'getLoginStatus'\n    })\n  },\n  methods: {\n    validateCredentials() {\n      if (this.user.userId == '' || this.user.userId == '') {\n        this.error.errorStatus = true;\n        this.error.errorMessage = \"Please Enter Fields\";\n      } else {}\n    },\n\n    resetCredentials() {\n      this.user.emailId = \"\";\n      this.user.password = \"\";\n    },\n\n    countDownChanged(c) {\n      this.dismissCountDown = c;\n\n      if (c == 0) {\n        this.userMessage = \"\";\n      }\n    },\n\n    showAlert() {\n      this.dismissCountDown = this.dismissSecs;\n    }\n\n  }\n};\n/*\nOLD validateCredentials:\n            // if(this.user.emailId && this.user.username === \"admin\" && this.user.password === \"admin\"){\n            //     this.loginMessage = \"Logged in as \" + this.user.username\n            //     this.isloggedIn = true;\n\n            //     setTimeout(()=>{\n            //         this.isloggedIn = false; //revert back after 1.5second.\n            //     }, 1500);\n            //     this.errorFlag.usernameErrorFlag = false;\n            //     this.errorFlag.passwordErrorFlag = false;\n            //     this.user.username = this.user.password = \"\"; //clear form field\n            //     this.$router.push({path: '/admindashboard'});\n               \n            // }else if(this.user.username !== \"admin\" && this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = true;\n            // }else if(this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.passwordErrorFlag = true;\n            // }else{\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = true;\n            // }\n\n*/","map":{"version":3,"names":["mapGetters","name","mounted","console","log","$route","params","data","dismissSecs","dismissCountDown","user","emailId","password","error","errorStatus","errorMessage","errorFlag","passwordErrorFlag","usernameErrorFlag","loginButtonClass","resetButtonClass","userMessage","computed","isloggedIn","methods","validateCredentials","userId","resetCredentials","countDownChanged","c","showAlert"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/components/scripts/LoginComponent.js"],"sourcesContent":["import { mapGetters } from \"vuex\";\nexport default{\n    name: 'LoginComponent',\n    mounted()\n    {\n        console.log(this.$route.params)\n    },\n    data(){\n        return {\n            dismissSecs: 10,\n            dismissCountDown: 0,\n            user : {\n                emailId: '',\n                password: '',\n            },\n            error:{\n                errorStatus:false,\n                errorMessage:\"\",\n            },\n            errorFlag: {\n                passwordErrorFlag: false,\n                usernameErrorFlag: false,  \n            },\n            loginButtonClass: 'login-button',\n            resetButtonClass: 'reset-button',\n            userMessage:\"\",\n           \n        }\n    },\n    computed:{\n        ...mapGetters({\n            isloggedIn: 'getLoginStatus'\n        })\n    },\n    methods: {\n        validateCredentials(){\n            if(this.user.userId=='' || this.user.userId=='')\n            {\n                this.error.errorStatus=true;\n                \n                this.error.errorMessage=\"Please Enter Fields\"\n            }\n            else{\n\n            }\n                     \n        },\n        resetCredentials(){\n            this.user.emailId = \"\";\n            this.user.password = \"\";\n        },\n        countDownChanged(c) {\n           \n            this.dismissCountDown = c;\n            if(c==0)\n            {\n                this.userMessage=\"\"\n            }\n          },\n          showAlert() {\n            this.dismissCountDown = this.dismissSecs;\n          },\n    }\n}\n\n\n/*\nOLD validateCredentials:\n            // if(this.user.emailId && this.user.username === \"admin\" && this.user.password === \"admin\"){\n            //     this.loginMessage = \"Logged in as \" + this.user.username\n            //     this.isloggedIn = true;\n\n            //     setTimeout(()=>{\n            //         this.isloggedIn = false; //revert back after 1.5second.\n            //     }, 1500);\n            //     this.errorFlag.usernameErrorFlag = false;\n            //     this.errorFlag.passwordErrorFlag = false;\n            //     this.user.username = this.user.password = \"\"; //clear form field\n            //     this.$router.push({path: '/admindashboard'});\n               \n            // }else if(this.user.username !== \"admin\" && this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = true;\n            // }else if(this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.passwordErrorFlag = true;\n            // }else{\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = true;\n            // }\n\n*/ \n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,MAA3B;AACA,eAAc;EACVC,IAAI,EAAE,gBADI;;EAEVC,OAAO,GACP;IACIC,OAAO,CAACC,GAAR,CAAY,KAAKC,MAAL,CAAYC,MAAxB;EACH,CALS;;EAMVC,IAAI,GAAE;IACF,OAAO;MACHC,WAAW,EAAE,EADV;MAEHC,gBAAgB,EAAE,CAFf;MAGHC,IAAI,EAAG;QACHC,OAAO,EAAE,EADN;QAEHC,QAAQ,EAAE;MAFP,CAHJ;MAOHC,KAAK,EAAC;QACFC,WAAW,EAAC,KADV;QAEFC,YAAY,EAAC;MAFX,CAPH;MAWHC,SAAS,EAAE;QACPC,iBAAiB,EAAE,KADZ;QAEPC,iBAAiB,EAAE;MAFZ,CAXR;MAeHC,gBAAgB,EAAE,cAff;MAgBHC,gBAAgB,EAAE,cAhBf;MAiBHC,WAAW,EAAC;IAjBT,CAAP;EAoBH,CA3BS;;EA4BVC,QAAQ,EAAC,EACL,GAAGtB,UAAU,CAAC;MACVuB,UAAU,EAAE;IADF,CAAD;EADR,CA5BC;EAiCVC,OAAO,EAAE;IACLC,mBAAmB,GAAE;MACjB,IAAG,KAAKf,IAAL,CAAUgB,MAAV,IAAkB,EAAlB,IAAwB,KAAKhB,IAAL,CAAUgB,MAAV,IAAkB,EAA7C,EACA;QACI,KAAKb,KAAL,CAAWC,WAAX,GAAuB,IAAvB;QAEA,KAAKD,KAAL,CAAWE,YAAX,GAAwB,qBAAxB;MACH,CALD,MAMI,CAEH;IAEJ,CAZI;;IAaLY,gBAAgB,GAAE;MACd,KAAKjB,IAAL,CAAUC,OAAV,GAAoB,EAApB;MACA,KAAKD,IAAL,CAAUE,QAAV,GAAqB,EAArB;IACH,CAhBI;;IAiBLgB,gBAAgB,CAACC,CAAD,EAAI;MAEhB,KAAKpB,gBAAL,GAAwBoB,CAAxB;;MACA,IAAGA,CAAC,IAAE,CAAN,EACA;QACI,KAAKR,WAAL,GAAiB,EAAjB;MACH;IACF,CAxBE;;IAyBHS,SAAS,GAAG;MACV,KAAKrB,gBAAL,GAAwB,KAAKD,WAA7B;IACD;;EA3BE;AAjCC,CAAd;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}