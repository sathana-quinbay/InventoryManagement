{"ast":null,"code":"export default {\n  name: \"ImportProductComponent\",\n\n  data() {\n    return {\n      csvFileData: [['Samsung A3', 'Hello', 'Mobile', '50000.00', '45', 'imageul.png']],\n      selectedFiles: undefined,\n      files: [],\n      items: [{\n        naem: 40,\n        first_name: 'Dickerson',\n        last_name: 'Macdonald'\n      }, {\n        naem: 21,\n        first_name: 'Larsen',\n        last_name: 'Shaw'\n      }, {\n        naem: 89,\n        first_name: 'Geneva',\n        last_name: 'Wilson'\n      }, {\n        naem: 38,\n        first_name: 'Jami',\n        last_name: 'Carney'\n      }]\n    };\n  },\n\n  computed: {\n    uploadDisabled() {\n      return this.files.length === 0;\n    }\n\n  },\n  methods: {\n    selectFile() {\n      this.selectedFiles = event.target.files[0];\n    },\n\n    uploadFile() {\n      console.log(\"file upload\");\n      console.log(this.selectedFiles);\n      var sellerId = localStorage.getItem('userId');\n      let formData = new FormData();\n      formData.append(\"file\", this.selectedFiles);\n\n      for (const pair of formData.entries()) {\n        console.log(`${pair[0]}, ${pair[1]}`);\n      }\n\n      this.$store.dispatch('uploadFile', {\n        formData,\n        sellerId\n      });\n    },\n\n    download_csv_file() {\n      //define the heading for each row of the data\n      var csv = 'productName,description,category,price,quantity,imageUrl\\n'; //merge the data with CSV\n\n      this.csvFileData.forEach(function (row) {\n        csv += row.join(',');\n        csv += \"\\n\";\n      }); //display the created CSV data on the web browser \n\n      document.write(csv);\n      var hiddenElement = document.createElement('a');\n      hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n      hiddenElement.target = '_blank'; //provide the name for the CSV file to be downloaded\n\n      hiddenElement.download = 'sampleProduct.csv';\n      hiddenElement.click(); // document.removeElement('a')\n\n      location.reload();\n    },\n\n    addFile(e) {\n      let droppedFiles = e.dataTransfer.files;\n      console.log(droppedFiles);\n      this.files = [];\n      if (!droppedFiles) return; // this tip, convert FileList to array, credit: https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n\n      [...droppedFiles].forEach(f => {\n        this.files.push(f);\n      });\n      this.$refs.file.value = null;\n    },\n\n    addFileInput() {\n      console.log(\"add file\");\n      this.files = [];\n      this.files.push(event.target.files[0]);\n      this.$refs.file.value = null;\n    },\n\n    removeFile(file) {\n      this.files = this.files.filter(f => {\n        return f != file;\n      });\n    },\n\n    upload() {\n      let formData = new FormData();\n      this.files.forEach((f, x) => {\n        formData.append('file' + (x + 1), f);\n      });\n      fetch('https://httpbin.org/post', {\n        method: 'POST',\n        body: formData\n      }).then(res => res.json()).then(res => {\n        console.log('done uploading', res);\n      }).catch(e => {\n        console.error(JSON.stringify(e.message));\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["name","data","csvFileData","selectedFiles","undefined","files","items","naem","first_name","last_name","computed","uploadDisabled","length","methods","selectFile","event","target","uploadFile","console","log","sellerId","localStorage","getItem","formData","FormData","append","pair","entries","$store","dispatch","download_csv_file","csv","forEach","row","join","document","write","hiddenElement","createElement","href","encodeURI","download","click","location","reload","addFile","e","droppedFiles","dataTransfer","f","push","$refs","file","value","addFileInput","removeFile","filter","upload","x","fetch","method","body","then","res","json","catch","error","JSON","stringify","message"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/components/scripts/ImportProductComponent.js"],"sourcesContent":["export default{\n    name:\"ImportProductComponent\",\n    data(){\n        return {\n            csvFileData: [\n                ['Samsung A3','Hello','Mobile','50000.00','45','imageul.png'],\n               \n             ],\n             selectedFiles: undefined,\n             files:[],\n             items: [\n                { naem: 40, first_name: 'Dickerson', last_name: 'Macdonald' },\n                { naem: 21, first_name: 'Larsen', last_name: 'Shaw' },\n                { naem: 89, first_name: 'Geneva', last_name: 'Wilson' },\n                { naem: 38, first_name: 'Jami', last_name: 'Carney' }\n              ]\n        }\n\n    },\n    computed: {\n        uploadDisabled() {\n          return this.files.length === 0;\n        }\n      },\n    methods:{\n        selectFile() {\n            this.selectedFiles = event.target.files[0];\n          },\n          uploadFile()\n          {\n            console.log(\"file upload\")\n            console.log(this.selectedFiles)\n            var sellerId=localStorage.getItem('userId');\n              let formData = new FormData();\n              formData.append(\"file\",this.selectedFiles);\n            \n              for (const pair of formData.entries()) {\n                console.log(`${pair[0]}, ${pair[1]}`);\n              }\n              this.$store.dispatch('uploadFile',{formData,sellerId})\n          },\n       download_csv_file() {\n\n            //define the heading for each row of the data\n            var csv = 'productName,description,category,price,quantity,imageUrl\\n';\n            \n            //merge the data with CSV\n            this.csvFileData.forEach(function(row) {\n                    csv += row.join(',');\n                    csv += \"\\n\";\n            });\n         \n            //display the created CSV data on the web browser \n            document.write(csv);\n        \n           \n            var hiddenElement = document.createElement('a');\n            hiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n            hiddenElement.target = '_blank';\n            \n            //provide the name for the CSV file to be downloaded\n            hiddenElement.download = 'sampleProduct.csv';\n            hiddenElement.click();\n            // document.removeElement('a')\n            location.reload();\n        },\n        addFile(e) {\n            let droppedFiles = e.dataTransfer.files;\n            console.log(droppedFiles)\n            this.files=[];\n            if(!droppedFiles) return;\n            // this tip, convert FileList to array, credit: https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n            ([...droppedFiles]).forEach(f => {\n              this.files.push(f);\n            });\n            this.$refs.file.value = null;\n            \n          },\n          addFileInput()\n          {\n            console.log(\"add file\")\n            this.files=[];\n            this.files.push(event.target.files[0]) ;\n            this.$refs.file.value = null;\n          },\n          removeFile(file){\n            this.files = this.files.filter(f => {\n              return f != file;\n            });      \n          },\n          upload() {\n            \n            let formData = new FormData();\n            this.files.forEach((f,x) => {\n              formData.append('file'+(x+1), f);\n            });\n            \n            fetch('https://httpbin.org/post', {\n              method:'POST',\n              body: formData\n            })\n            .then(res => res.json())\n            .then(res => {\n               console.log('done uploading', res);\n            })\n            .catch(e => {\n              console.error(JSON.stringify(e.message));\n            });\n            \n          }\n        }\n\n    }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}