{"ast":null,"code":"export default {\n  methods: {\n    userNameRegisterCheck() {\n      if (this.userNameCheck(this.seller.name) != 'true') {\n        this.nameErrorFlag = true;\n        this.nameErrorMessage = this.userNameCheck(this.seller.name);\n      } else {\n        this.nameErrorFlag = false;\n        this.nameErrorMessage = '';\n      }\n    },\n\n    // addressCheck()\n    // {\n    //      if (this.seller.address.length < 15  ) {\n    //         this.addressErrorFlag = true;\n    //         this.addressErrorMessage = \"Invalid Address\"\n    //     }\n    //     else if(this.seller.address.length >= 150)\n    //     {\n    //         this.addressErrorFlag = true;\n    //         this.addressErrorMessage = \"Maximum 150 characters\"\n    //     }\n    //     else{\n    //         this.addressErrorFlag = false;\n    //         this.addressErrorMessage = \"\"\n    //     }\n    // },\n    contactCheck() {\n      if (this.seller.contact.match(/^(\\+\\d{2}[- ]?)?\\d{10}$/g, \"\") === null) {\n        this.contactErrorMessage = 'Invalid ';\n        this.contactErrorFlag = true;\n      } else {\n        this.contactErrorMessage = '';\n        this.contactErrorFlag = false;\n      }\n    }\n\n  }\n};","map":{"version":3,"names":["methods","userNameRegisterCheck","userNameCheck","seller","name","nameErrorFlag","nameErrorMessage","contactCheck","contact","match","contactErrorMessage","contactErrorFlag"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/mixins/registerValidation.js"],"sourcesContent":["export default{\n    methods:{\n        userNameRegisterCheck() {\n            if (this.userNameCheck(this.seller.name) != 'true') {\n                this.nameErrorFlag = true;\n                this.nameErrorMessage = this.userNameCheck(this.seller.name)\n            } else {\n                this.nameErrorFlag = false\n                this.nameErrorMessage = ''\n            }\n        },\n        // addressCheck()\n        // {\n        //      if (this.seller.address.length < 15  ) {\n        //         this.addressErrorFlag = true;\n        //         this.addressErrorMessage = \"Invalid Address\"\n        //     }\n        //     else if(this.seller.address.length >= 150)\n        //     {\n        //         this.addressErrorFlag = true;\n        //         this.addressErrorMessage = \"Maximum 150 characters\"\n        //     }\n        //     else{\n        //         this.addressErrorFlag = false;\n        //         this.addressErrorMessage = \"\"\n        //     }\n\n        // },\n        contactCheck() {\n            if (this.seller.contact.match(/^(\\+\\d{2}[- ]?)?\\d{10}$/g, \"\") === null) {\n\n                this.contactErrorMessage = 'Invalid '\n                this.contactErrorFlag = true;\n            }\n            else{\n                this.contactErrorMessage = ''\n                this.contactErrorFlag = false;\n\n            }\n        },\n    }\n}"],"mappings":"AAAA,eAAc;EACVA,OAAO,EAAC;IACJC,qBAAqB,GAAG;MACpB,IAAI,KAAKC,aAAL,CAAmB,KAAKC,MAAL,CAAYC,IAA/B,KAAwC,MAA5C,EAAoD;QAChD,KAAKC,aAAL,GAAqB,IAArB;QACA,KAAKC,gBAAL,GAAwB,KAAKJ,aAAL,CAAmB,KAAKC,MAAL,CAAYC,IAA/B,CAAxB;MACH,CAHD,MAGO;QACH,KAAKC,aAAL,GAAqB,KAArB;QACA,KAAKC,gBAAL,GAAwB,EAAxB;MACH;IACJ,CATG;;IAUJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACAC,YAAY,GAAG;MACX,IAAI,KAAKJ,MAAL,CAAYK,OAAZ,CAAoBC,KAApB,CAA0B,0BAA1B,EAAsD,EAAtD,MAA8D,IAAlE,EAAwE;QAEpE,KAAKC,mBAAL,GAA2B,UAA3B;QACA,KAAKC,gBAAL,GAAwB,IAAxB;MACH,CAJD,MAKI;QACA,KAAKD,mBAAL,GAA2B,EAA3B;QACA,KAAKC,gBAAL,GAAwB,KAAxB;MAEH;IACJ;;EAtCG;AADE,CAAd"},"metadata":{},"sourceType":"module"}