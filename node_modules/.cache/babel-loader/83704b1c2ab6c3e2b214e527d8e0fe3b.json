{"ast":null,"code":"//  import { mapGetters } from 'vuex';\n// import { sellers } from './mockSellers';\nexport default {\n  name: 'AdminDashboardComponent',\n\n  data() {\n    return {\n      isLoading: false,\n      // sellers: sellers,\n      activeSellersCount: 0,\n      disabledSellersCount: 0\n    };\n  },\n\n  // computed:\n  // {\n  //     // ...mapGetters({\n  //     //     activeSellers:'getSellers',\n  //     // })\n  // },\n  created() {\n    this.$store.dispatch('GET_ALL_SELLERS'); // this.$store.dispatch('USER_LOGGED_IN')\n\n    let activeSellers = this.$store.state.sellerStore.sellers;\n    console.log(\"damn\" + activeSellers);\n\n    for (let i = 0; i < activeSellers.length; i++) {\n      if (activeSellers.role == \"seller\") {\n        if (activeSellers.status == \"true\") {\n          this.activeSellersCount++;\n          console.log(\"active\");\n        } else {\n          this.disabledSellersCount++;\n        }\n      }\n    }\n  },\n\n  methods: {\n    updateLoader() {\n      this.isLoading = false; //fix after service layer is integrated.\n\n      setInterval(() => {\n        this.isLoading = true;\n      }, 5000);\n    },\n\n    createSeller() {\n      this.$router.push({\n        path: `/admindashboard/create`\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["name","data","isLoading","activeSellersCount","disabledSellersCount","created","$store","dispatch","activeSellers","state","sellerStore","sellers","console","log","i","length","role","status","methods","updateLoader","setInterval","createSeller","$router","push","path"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/components/scripts/AdminDashboardComponent.js"],"sourcesContent":["\n//  import { mapGetters } from 'vuex';\n// import { sellers } from './mockSellers';\n\nexport default {\n    name: 'AdminDashboardComponent',\n    data(){\n        return {\n            isLoading: false,\n            // sellers: sellers,\n            activeSellersCount:0,\n            disabledSellersCount:0\n        }\n    },\n    // computed:\n    // {\n    //     // ...mapGetters({\n    //     //     activeSellers:'getSellers',\n    //     // })\n    // },\n    created(){\n        this.$store.dispatch('GET_ALL_SELLERS');\n        // this.$store.dispatch('USER_LOGGED_IN')\n        let activeSellers=this.$store.state.sellerStore.sellers;\n        console.log(\"damn\"+activeSellers);\n        for(let i=0;i<activeSellers.length;i++)\n        {\n            if(activeSellers.role==\"seller\")\n            {\n                if(activeSellers.status==\"true\")\n                {\n                    this.activeSellersCount++;\n                    console.log(\"active\")\n                }\n                else{\n                    this.disabledSellersCount++;\n                }\n            }\n        }\n    },\n    methods: {\n        updateLoader(){\n            this.isLoading = false; //fix after service layer is integrated.\n            setInterval(()=>{\n                this.isLoading = true;\n            }, 5000);\n            \n        },\n        createSeller(){\n            this.$router.push({path: `/admindashboard/create`})\n        },\n      \n    }\n}"],"mappings":"AACA;AACA;AAEA,eAAe;EACXA,IAAI,EAAE,yBADK;;EAEXC,IAAI,GAAE;IACF,OAAO;MACHC,SAAS,EAAE,KADR;MAEH;MACAC,kBAAkB,EAAC,CAHhB;MAIHC,oBAAoB,EAAC;IAJlB,CAAP;EAMH,CATU;;EAUX;EACA;EACA;EACA;EACA;EACA;EACAC,OAAO,GAAE;IACL,KAAKC,MAAL,CAAYC,QAAZ,CAAqB,iBAArB,EADK,CAEL;;IACA,IAAIC,aAAa,GAAC,KAAKF,MAAL,CAAYG,KAAZ,CAAkBC,WAAlB,CAA8BC,OAAhD;IACAC,OAAO,CAACC,GAAR,CAAY,SAAOL,aAAnB;;IACA,KAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,aAAa,CAACO,MAA5B,EAAmCD,CAAC,EAApC,EACA;MACI,IAAGN,aAAa,CAACQ,IAAd,IAAoB,QAAvB,EACA;QACI,IAAGR,aAAa,CAACS,MAAd,IAAsB,MAAzB,EACA;UACI,KAAKd,kBAAL;UACAS,OAAO,CAACC,GAAR,CAAY,QAAZ;QACH,CAJD,MAKI;UACA,KAAKT,oBAAL;QACH;MACJ;IACJ;EACJ,CAnCU;;EAoCXc,OAAO,EAAE;IACLC,YAAY,GAAE;MACV,KAAKjB,SAAL,GAAiB,KAAjB,CADU,CACc;;MACxBkB,WAAW,CAAC,MAAI;QACZ,KAAKlB,SAAL,GAAiB,IAAjB;MACH,CAFU,EAER,IAFQ,CAAX;IAIH,CAPI;;IAQLmB,YAAY,GAAE;MACV,KAAKC,OAAL,CAAaC,IAAb,CAAkB;QAACC,IAAI,EAAG;MAAR,CAAlB;IACH;;EAVI;AApCE,CAAf"},"metadata":{},"sourceType":"module"}