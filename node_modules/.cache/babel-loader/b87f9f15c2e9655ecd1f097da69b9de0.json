{"ast":null,"code":"export default {\n  methods: {\n    userNameRegisterCheck() {\n      if (this.userNameCheck(this.seller.name) != 'true') {\n        this.nameErrorFlag = true;\n        this.nameErrorMessage = this.userNameCheck(this.seller.name);\n      } else {\n        this.nameErrorFlag = false;\n        this.nameErrorMessage = '';\n      }\n    },\n\n    addressCheck() {\n      if (this.seller.address.length < 15) {\n        this.addressErrorFlag = true;\n        this.addressErrorMessage = \"Invalid Address\";\n      } else if (this.seller.address.length >= 150) {\n        this.addressErrorFlag = true;\n        this.addressErrorMessage = \"Maximum 150 characters\";\n      } else {\n        this.addressErrorFlag = false;\n        this.addressErrorMessage = \"\";\n      }\n    },\n\n    userNameCheck(name) {\n      var userName = new RegExp('^[a-zA-Z . ]+$');\n      if (name.length < 3) return \"Required atleast 3 characters\";\n      if (!userName.test(name)) return \"must contain alphabets only\";\n      if (name[0] == '.') return \"Name must not start with dot\";\n      if (name[name.length - 1] == '.') return \"Name must not end with dot\";\n      if (name.length > 15) return \"Maximum 15 characters\";\n      return \"true\";\n    },\n\n    contactCheck() {\n      if (this.seller.contact.match(/^(\\+\\d{2}[- ]?)?\\d{10}$/g, \"\") === null) {\n        this.contactErrorMessage = 'Invalid ';\n        this.contactErrorFlag = true;\n      } else {\n        this.contactErrorMessage = '';\n        this.contactErrorFlag = false;\n      }\n    }\n\n  }\n};","map":{"version":3,"names":["methods","userNameRegisterCheck","userNameCheck","seller","name","nameErrorFlag","nameErrorMessage","addressCheck","address","length","addressErrorFlag","addressErrorMessage","userName","RegExp","test","contactCheck","contact","match","contactErrorMessage","contactErrorFlag"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/mixins/registerValidation.js"],"sourcesContent":["export default{\n    methods:{\n        userNameRegisterCheck() {\n            if (this.userNameCheck(this.seller.name) != 'true') {\n                this.nameErrorFlag = true;\n                this.nameErrorMessage = this.userNameCheck(this.seller.name)\n            } else {\n                this.nameErrorFlag = false\n                this.nameErrorMessage = ''\n            }\n        },\n        addressCheck()\n        {\n             if (this.seller.address.length < 15  ) {\n                this.addressErrorFlag = true;\n                this.addressErrorMessage = \"Invalid Address\"\n            }\n            else if(this.seller.address.length >= 150)\n            {\n                this.addressErrorFlag = true;\n                this.addressErrorMessage = \"Maximum 150 characters\"\n            }\n            else{\n                this.addressErrorFlag = false;\n                this.addressErrorMessage = \"\"\n            }\n\n        },\n        userNameCheck(name) {\n            var userName = new RegExp('^[a-zA-Z . ]+$')\n            \n            if ( name.length < 3) return \"Required atleast 3 characters\"\n            if (!userName.test(name)) return \"must contain alphabets only\"\n            if (name[0] == '.') return \"Name must not start with dot\"\n            if (name[name.length - 1] == '.') return \"Name must not end with dot\"\n            if (name.length>15) return \"Maximum 15 characters\"\n            return \"true\"\n        },\n        \n        contactCheck() {\n            if (this.seller.contact.match(/^(\\+\\d{2}[- ]?)?\\d{10}$/g, \"\") === null) {\n\n                this.contactErrorMessage = 'Invalid '\n                this.contactErrorFlag = true;\n            }\n            else{\n                this.contactErrorMessage = ''\n                this.contactErrorFlag = false;\n\n            }\n        },\n    }\n}"],"mappings":"AAAA,eAAc;EACVA,OAAO,EAAC;IACJC,qBAAqB,GAAG;MACpB,IAAI,KAAKC,aAAL,CAAmB,KAAKC,MAAL,CAAYC,IAA/B,KAAwC,MAA5C,EAAoD;QAChD,KAAKC,aAAL,GAAqB,IAArB;QACA,KAAKC,gBAAL,GAAwB,KAAKJ,aAAL,CAAmB,KAAKC,MAAL,CAAYC,IAA/B,CAAxB;MACH,CAHD,MAGO;QACH,KAAKC,aAAL,GAAqB,KAArB;QACA,KAAKC,gBAAL,GAAwB,EAAxB;MACH;IACJ,CATG;;IAUJC,YAAY,GACZ;MACK,IAAI,KAAKJ,MAAL,CAAYK,OAAZ,CAAoBC,MAApB,GAA6B,EAAjC,EAAuC;QACpC,KAAKC,gBAAL,GAAwB,IAAxB;QACA,KAAKC,mBAAL,GAA2B,iBAA3B;MACH,CAHA,MAII,IAAG,KAAKR,MAAL,CAAYK,OAAZ,CAAoBC,MAApB,IAA8B,GAAjC,EACL;QACI,KAAKC,gBAAL,GAAwB,IAAxB;QACA,KAAKC,mBAAL,GAA2B,wBAA3B;MACH,CAJI,MAKD;QACA,KAAKD,gBAAL,GAAwB,KAAxB;QACA,KAAKC,mBAAL,GAA2B,EAA3B;MACH;IAEJ,CA1BG;;IA2BJT,aAAa,CAACE,IAAD,EAAO;MAChB,IAAIQ,QAAQ,GAAG,IAAIC,MAAJ,CAAW,gBAAX,CAAf;MAEA,IAAKT,IAAI,CAACK,MAAL,GAAc,CAAnB,EAAsB,OAAO,+BAAP;MACtB,IAAI,CAACG,QAAQ,CAACE,IAAT,CAAcV,IAAd,CAAL,EAA0B,OAAO,6BAAP;MAC1B,IAAIA,IAAI,CAAC,CAAD,CAAJ,IAAW,GAAf,EAAoB,OAAO,8BAAP;MACpB,IAAIA,IAAI,CAACA,IAAI,CAACK,MAAL,GAAc,CAAf,CAAJ,IAAyB,GAA7B,EAAkC,OAAO,4BAAP;MAClC,IAAIL,IAAI,CAACK,MAAL,GAAY,EAAhB,EAAoB,OAAO,uBAAP;MACpB,OAAO,MAAP;IACH,CApCG;;IAsCJM,YAAY,GAAG;MACX,IAAI,KAAKZ,MAAL,CAAYa,OAAZ,CAAoBC,KAApB,CAA0B,0BAA1B,EAAsD,EAAtD,MAA8D,IAAlE,EAAwE;QAEpE,KAAKC,mBAAL,GAA2B,UAA3B;QACA,KAAKC,gBAAL,GAAwB,IAAxB;MACH,CAJD,MAKI;QACA,KAAKD,mBAAL,GAA2B,EAA3B;QACA,KAAKC,gBAAL,GAAwB,KAAxB;MAEH;IACJ;;EAjDG;AADE,CAAd"},"metadata":{},"sourceType":"module"}