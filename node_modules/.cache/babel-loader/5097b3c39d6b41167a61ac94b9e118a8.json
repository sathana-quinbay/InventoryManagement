{"ast":null,"code":"import { mapGetters } from \"vuex\";\nexport default {\n  name: 'LoginComponent',\n\n  mounted() {\n    console.log(this.$route.params);\n  },\n\n  data() {\n    return {\n      dismissSecs: 10,\n      dismissCountDown: 0,\n      user: {\n        emailId: '',\n        password: ''\n      },\n      error: {\n        errorStatus: false,\n        errorMessage: \"\"\n      },\n      errorFlag: {\n        passwordErrorFlag: false,\n        usernameErrorFlag: false\n      },\n      loginButtonClass: 'login-button',\n      resetButtonClass: 'reset-button',\n      userMessage: \"\"\n    };\n  },\n\n  computed: { ...mapGetters({\n      isloggedIn: 'getLoginStatus'\n    })\n  },\n  methods: {\n    validateCredentials() {\n      if (this.user.userId == ' ' || this.user.emailId == ' ') {\n        console.log(\"insdie\");\n        this.error.errorStatus = true;\n        this.error.errorMessage = \"Please Enter Fields\";\n      } else {\n        this.error.errorStatus = false;\n        this.error.errorMessage = \" \";\n        this.$store.dispatch('ATTEMPT_LOGIN', {\n          success: response => {\n            console.log(\"inside success\");\n            this.$store.dispatch('USER_LOG_STATUS', true); //this.isloggedIn = true;\n\n            console.log(response);\n\n            if (response.data.httpStatusCode == 409) {\n              this.showAlert();\n              this.userMessage = response.data.message;\n              this.error.errorStatus = false;\n              this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = false;\n              this.error.errorMessage = \"\";\n            } else if (response.data.httpStatusCode == 401) {\n              this.error.errorStatus = true;\n              this.errorFlag.passwordErrorFlag = true;\n              this.errorFlag.usernameErrorFlag = false;\n              this.error.errorMessage = \"Password is wrong\";\n            } else if (response.data.httpStatusCode == 404) {\n              this.error.errorStatus = true;\n              this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = true;\n              this.error.errorMessage = \"Invalid user name or password\";\n            } else if (response.data.httpStatusCode == 200) {\n              this.error.errorStatus = false;\n              this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = false;\n              this.error.errorMessage = \"\";\n              localStorage.setItem('role', response.data.data.role);\n              localStorage.setItem('userId', response.data.data.userId);\n\n              if (response.data.data.role == 'admin') {\n                this.$router.push({\n                  path: '/admin/dashboard'\n                });\n              } else if (response.data.data.role == 'seller') {\n                this.$router.push({\n                  path: '/seller/dashboard'\n                });\n              }\n            }\n          },\n          error: err => {\n            console.log(\"inside error\", err); // console.log(err)\n            // console.warn(err);\n            // this.isloggedIn = false;\n\n            this.$store.dispatch('USER_LOG_STATUS', false);\n            this.error.errorStatus = true;\n            this.error.errorMessage = err.message;\n          },\n          user: this.user\n        });\n      }\n    },\n\n    resetCredentials() {\n      this.user.emailId = \"\";\n      this.user.password = \"\";\n    },\n\n    countDownChanged(c) {\n      this.dismissCountDown = c;\n\n      if (c == 0) {\n        this.userMessage = \"\";\n      }\n    },\n\n    showAlert() {\n      this.dismissCountDown = this.dismissSecs;\n    }\n\n  }\n};\n/*\nOLD validateCredentials:\n            // if(this.user.emailId && this.user.username === \"admin\" && this.user.password === \"admin\"){\n            //     this.loginMessage = \"Logged in as \" + this.user.username\n            //     this.isloggedIn = true;\n\n            //     setTimeout(()=>{\n            //         this.isloggedIn = false; //revert back after 1.5second.\n            //     }, 1500);\n            //     this.errorFlag.usernameErrorFlag = false;\n            //     this.errorFlag.passwordErrorFlag = false;\n            //     this.user.username = this.user.password = \"\"; //clear form field\n            //     this.$router.push({path: '/admindashboard'});\n               \n            // }else if(this.user.username !== \"admin\" && this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = true;\n            // }else if(this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.passwordErrorFlag = true;\n            // }else{\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = true;\n            // }\n\n*/","map":{"version":3,"names":["mapGetters","name","mounted","console","log","$route","params","data","dismissSecs","dismissCountDown","user","emailId","password","error","errorStatus","errorMessage","errorFlag","passwordErrorFlag","usernameErrorFlag","loginButtonClass","resetButtonClass","userMessage","computed","isloggedIn","methods","validateCredentials","userId","$store","dispatch","success","response","httpStatusCode","showAlert","message","localStorage","setItem","role","$router","push","path","err","resetCredentials","countDownChanged","c"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/components/scripts/LoginComponent.js"],"sourcesContent":["import { mapGetters } from \"vuex\";\nexport default{\n    name: 'LoginComponent',\n    mounted()\n    {\n        console.log(this.$route.params)\n    },\n    data(){\n        return {\n            dismissSecs: 10,\n            dismissCountDown: 0,\n            user : {\n                emailId: '',\n                password: '',\n            },\n            error:{\n                errorStatus:false,\n                errorMessage:\"\",\n            },\n            errorFlag: {\n                passwordErrorFlag: false,\n                usernameErrorFlag: false,  \n            },\n            loginButtonClass: 'login-button',\n            resetButtonClass: 'reset-button',\n            userMessage:\"\",\n           \n        }\n    },\n    computed:{\n        ...mapGetters({\n            isloggedIn: 'getLoginStatus'\n        })\n    },\n    methods: {\n        validateCredentials(){\n            if(this.user.userId==' '|| this.user.emailId==' ')\n            {\n                console.log(\"insdie\")\n                this.error.errorStatus=true;\n                \n                this.error.errorMessage=\"Please Enter Fields\"\n            }\n            else{\n                this.error.errorStatus=false;\n                \n                this.error.errorMessage=\" \"\n                this.$store.dispatch('ATTEMPT_LOGIN', {\n               \n                    success: (response)=>{\n                        console.log(\"inside success\")\n                        \n                        this.$store.dispatch('USER_LOG_STATUS',true)\n                        //this.isloggedIn = true;\n                        console.log(response);\n                        if(response.data.httpStatusCode==409)\n                        {\n                            this.showAlert()\n                            this.userMessage=response.data.message\n                            this.error.errorStatus=false;\n                           this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = false;\n                            this.error.errorMessage=\"\"\n                        }\n                        else\n                        if(response.data.httpStatusCode==401)\n                        {\n                            this.error.errorStatus=true;\n                            this.errorFlag.passwordErrorFlag = true;\n                            this.errorFlag.usernameErrorFlag = false;\n                            this.error.errorMessage=\"Password is wrong\"\n                        }\n                        else if(response.data.httpStatusCode==404)\n                        {\n                            this.error.errorStatus=true;\n                            this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = true;\n                            this.error.errorMessage=\"Invalid user name or password\"\n                        }\n                        else if(response.data.httpStatusCode==200)\n                        {\n                            this.error.errorStatus=false;\n                           this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = false;\n                            this.error.errorMessage=\"\"\n                     \n                        localStorage.setItem('role', response.data.data.role);\n                        localStorage.setItem('userId', response.data.data.userId);\n                        if( response.data.data.role=='admin')\n                        { this.$router.push({path: '/admin/dashboard'});\n    \n                        }\n                        else if( response.data.data.role=='seller')\n                        { this.$router.push({path: '/seller/dashboard'});\n    \n                        }\n                        }\n                    },\n                    error: (err)=>{\n                        console.log(\"inside error\",err)\n                        // console.log(err)\n                        // console.warn(err);\n                        // this.isloggedIn = false;\n                        this.$store.dispatch('USER_LOG_STATUS',false)\n                        this.error.errorStatus=true;\n                        this.error.errorMessage=err.message;\n                    },\n                    user: this.user\n                });  \n            }\n                     \n        },\n        resetCredentials(){\n            this.user.emailId = \"\";\n            this.user.password = \"\";\n        },\n        countDownChanged(c) {\n           \n            this.dismissCountDown = c;\n            if(c==0)\n            {\n                this.userMessage=\"\"\n            }\n          },\n          showAlert() {\n            this.dismissCountDown = this.dismissSecs;\n          },\n    }\n}\n\n\n/*\nOLD validateCredentials:\n            // if(this.user.emailId && this.user.username === \"admin\" && this.user.password === \"admin\"){\n            //     this.loginMessage = \"Logged in as \" + this.user.username\n            //     this.isloggedIn = true;\n\n            //     setTimeout(()=>{\n            //         this.isloggedIn = false; //revert back after 1.5second.\n            //     }, 1500);\n            //     this.errorFlag.usernameErrorFlag = false;\n            //     this.errorFlag.passwordErrorFlag = false;\n            //     this.user.username = this.user.password = \"\"; //clear form field\n            //     this.$router.push({path: '/admindashboard'});\n               \n            // }else if(this.user.username !== \"admin\" && this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = true;\n            // }else if(this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.passwordErrorFlag = true;\n            // }else{\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = true;\n            // }\n\n*/ \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}