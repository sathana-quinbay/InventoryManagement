{"ast":null,"code":"import { mapGetters } from \"vuex\";\nexport default {\n  name: 'LoginComponent',\n\n  mounted() {\n    console.log(this.$route.params);\n  },\n\n  data() {\n    return {\n      user: {\n        emailId: '',\n        password: ''\n      },\n      error: {\n        errorStatus: false,\n        errorMessage: \"\"\n      },\n      errorFlag: {\n        passwordErrorFlag: false,\n        usernameErrorFlag: false\n      },\n      loginButtonClass: 'login-button',\n      resetButtonClass: 'reset-button'\n    };\n  },\n\n  computed: { ...mapGetters({\n      isloggedIn: 'getLoginStatus'\n    })\n  },\n  methods: {\n    validateCredentials() {\n      this.$store.dispatch('ATTEMPT_LOGIN', {\n        success: response => {\n          console.log(\"inside success\");\n          this.$store.dispatch('USER_LOG_STATUS', true); //this.isloggedIn = true;\n\n          console.log(response);\n\n          if (response.data.httpStatusCode == 401) {\n            this.error.errorStatus = true;\n            this.errorFlag.passwordErrorFlag = true;\n            this.error.errorMessage = \"Password is wrong\";\n          } else if (response.data.httpStatusCode == 404) {\n            this.error.errorStatus = true;\n            this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = true;\n            this.error.errorMessage = \"Invalid user name or password\";\n          } else if (response.data.httpStatusCode == 200) {\n            this.error.errorStatus = false;\n            this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = false;\n            this.error.errorMessage = \"\";\n            localStorage.setItem('role', response.data.data.role);\n            localStorage.setItem('userId', response.data.data.userId);\n\n            if (response.data.data.role == 'admin') {\n              this.$router.push({\n                path: '/admin/dashboard'\n              });\n            }\n          }\n        },\n        error: err => {\n          console.log(\"inside error\", err); // console.log(err)\n          // console.warn(err);\n          // this.isloggedIn = false;\n\n          this.$store.dispatch('USER_LOG_STATUS', false);\n          this.error.errorStatus = true;\n          this.error.errorMessage = err.message;\n        },\n        user: this.user\n      });\n    },\n\n    resetCredentials() {\n      this.user.emailId = \"\";\n      this.user.password = \"\";\n    }\n\n  }\n};\n/*\nOLD validateCredentials:\n            // if(this.user.emailId && this.user.username === \"admin\" && this.user.password === \"admin\"){\n            //     this.loginMessage = \"Logged in as \" + this.user.username\n            //     this.isloggedIn = true;\n\n            //     setTimeout(()=>{\n            //         this.isloggedIn = false; //revert back after 1.5second.\n            //     }, 1500);\n            //     this.errorFlag.usernameErrorFlag = false;\n            //     this.errorFlag.passwordErrorFlag = false;\n            //     this.user.username = this.user.password = \"\"; //clear form field\n            //     this.$router.push({path: '/admindashboard'});\n               \n            // }else if(this.user.username !== \"admin\" && this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = true;\n            // }else if(this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.passwordErrorFlag = true;\n            // }else{\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = true;\n            // }\n\n*/","map":{"version":3,"names":["mapGetters","name","mounted","console","log","$route","params","data","user","emailId","password","error","errorStatus","errorMessage","errorFlag","passwordErrorFlag","usernameErrorFlag","loginButtonClass","resetButtonClass","computed","isloggedIn","methods","validateCredentials","$store","dispatch","success","response","httpStatusCode","localStorage","setItem","role","userId","$router","push","path","err","message","resetCredentials"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/components/scripts/LoginComponent.js"],"sourcesContent":["import { mapGetters } from \"vuex\";\nexport default{\n    name: 'LoginComponent',\n    mounted()\n    {\n        console.log(this.$route.params)\n    },\n    data(){\n        return {\n           \n            user : {\n                emailId: '',\n                password: '',\n            },\n            error:{\n                errorStatus:false,\n                errorMessage:\"\",\n            },\n            errorFlag: {\n                passwordErrorFlag: false,\n                usernameErrorFlag: false,  \n            },\n            loginButtonClass: 'login-button',\n            resetButtonClass: 'reset-button',\n           \n        }\n    },\n    computed:{\n        ...mapGetters({\n            isloggedIn: 'getLoginStatus'\n        })\n    },\n    methods: {\n        validateCredentials(){\n            this.$store.dispatch('ATTEMPT_LOGIN', {\n                success: (response)=>{\n                    console.log(\"inside success\")\n                   \n                    this.$store.dispatch('USER_LOG_STATUS',true)\n                    //this.isloggedIn = true;\n                    console.log(response);\n                    if(response.data.httpStatusCode==401)\n                    {\n                        this.error.errorStatus=true;\n                     this.errorFlag.passwordErrorFlag = true;\n                        this.error.errorMessage=\"Password is wrong\"\n                    }\n                    else if(response.data.httpStatusCode==404)\n                    {\n                        this.error.errorStatus=true;\n                        this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = true;\n                        this.error.errorMessage=\"Invalid user name or password\"\n                    }\n                    else if(response.data.httpStatusCode==200)\n                    {\n                        this.error.errorStatus=false;\n                       this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = false;\n                        this.error.errorMessage=\"\"\n                 \n                    localStorage.setItem('role', response.data.data.role);\n                    localStorage.setItem('userId', response.data.data.userId);\n                    if( response.data.data.role=='admin')\n                    { this.$router.push({path: '/admin/dashboard'});\n\n                    }\n                    \n                    }\n                },\n                error: (err)=>{\n                    console.log(\"inside error\",err)\n                    // console.log(err)\n                    // console.warn(err);\n                    // this.isloggedIn = false;\n                    this.$store.dispatch('USER_LOG_STATUS',false)\n                    this.error.errorStatus=true;\n                    this.error.errorMessage=err.message;\n                },\n                user: this.user\n            });            \n        },\n        resetCredentials(){\n            this.user.emailId = \"\";\n            this.user.password = \"\";\n        },\n    }\n}\n\n\n/*\nOLD validateCredentials:\n            // if(this.user.emailId && this.user.username === \"admin\" && this.user.password === \"admin\"){\n            //     this.loginMessage = \"Logged in as \" + this.user.username\n            //     this.isloggedIn = true;\n\n            //     setTimeout(()=>{\n            //         this.isloggedIn = false; //revert back after 1.5second.\n            //     }, 1500);\n            //     this.errorFlag.usernameErrorFlag = false;\n            //     this.errorFlag.passwordErrorFlag = false;\n            //     this.user.username = this.user.password = \"\"; //clear form field\n            //     this.$router.push({path: '/admindashboard'});\n               \n            // }else if(this.user.username !== \"admin\" && this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = this.errorFlag.passwordErrorFlag = true;\n            // }else if(this.user.password !== \"admin\"){\n            //     this.isloggedIn = false;\n            //     this.errorFlag.passwordErrorFlag = true;\n            // }else{\n            //     this.isloggedIn = false;\n            //     this.errorFlag.usernameErrorFlag = true;\n            // }\n\n*/ \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}