{"ast":null,"code":"export default {\n  name: 'RegisterComponent',\n\n  data() {\n    return {\n      seller: {\n        name: '',\n        emailId: '',\n        contact: '',\n        address: '',\n        password: ''\n      },\n      checkPassword: '',\n      passwordErrorFlag: false,\n      nameErrorFlag: false,\n      addressErrorFlag: false,\n      passwordError: '',\n      contactErrorFlag: false,\n      confirmPasswordErrorFlag: false,\n      emailIdErrorFlag: false,\n      isRegisterSuccess: false\n    };\n  },\n\n  methods: {\n    registerNewSeller() {\n      this.nameErrorFlag = false;\n      this.emailIdErrorFlag = false;\n      this.contactErrorFlag = false;\n      this.emailIdErrorFlag = false;\n      this.checkPassword = false;\n      this.passwordErrorFlag = false;\n      this.confirmPasswordErrorFlag = false;\n      this.passwordError = '';\n      this.addressErrorFlag = false;\n\n      if (this.seller.name.length < 5) {\n        this.nameErrorFlag = true; // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      console.log(this.seller.emailId);\n\n      if (this.seller.emailId == ' ' || this.seller.emailId.includes('@gmail.com') === false) {\n        this.emailIdErrorFlag = true; // setInterval(()=>{ this.emailIdErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      if (this.seller.contact.length !== 10) {\n        this.contactErrorFlag = true;\n        setInterval(() => {\n          this.contactErrorFlag = false;\n        }, 2000);\n        return;\n      }\n\n      if (this.seller.address.length < 5) {\n        this.addressErrorFlag = true; // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n\n        return;\n      }\n\n      if (this.seller.password < 5) {\n        this.passwordErrorFlag = true;\n        this.passwordError = \"Give strong password\";\n        return;\n      }\n\n      if (this.checkPassword != this.seller.password) {\n        this.confirmPasswordErrorFlag = true;\n        this.passwordError = \"does not match\";\n        setInterval(() => {\n          this.confirmPasswordErrorFlag = false;\n        }, 2000);\n        return;\n      } else if (this.seller.emailId.includes('@gmail.com') && this.seller.contact.length === 10 && this.checkPassword === this.seller.password) {\n        this.contactErrorFlag = this.passwordErrorFlag = false;\n        this.$store.dispatch('REGISTER_NEW_SELLER', {\n          sucess: response => {\n            console.log(response);\n            this.isRegisterSuccess = true;\n            setInterval(() => {\n              this.isRegisterSuccess = false;\n            }, 3000);\n            this.resetFields();\n          },\n          error: err => {\n            console.warn(\"New Merchant could not be registered. | \" + err);\n          },\n          seller: this.seller\n        });\n      }\n    },\n\n    resetFields() {\n      this.seller = {\n        name: '',\n        emailId: '',\n        contact: '',\n        address: '',\n        password: ''\n      };\n    }\n\n  }\n};","map":{"version":3,"names":["name","data","seller","emailId","contact","address","password","checkPassword","passwordErrorFlag","nameErrorFlag","addressErrorFlag","passwordError","contactErrorFlag","confirmPasswordErrorFlag","emailIdErrorFlag","isRegisterSuccess","methods","registerNewSeller","length","console","log","includes","setInterval","$store","dispatch","sucess","response","resetFields","error","err","warn"],"sources":["/Users/sathanav/Documents/GitHub/Management/InventoryManagement/src/components/scripts/RegisterComponent.js"],"sourcesContent":["export default {\n    name: 'RegisterComponent',\n    data(){\n        return {\n            seller: {\n                name: '',\n                emailId: '',\n                contact: '',\n                address: '',\n                password: ''\n            },\n            checkPassword: '',\n            passwordErrorFlag: false,\n            nameErrorFlag:false,\n            addressErrorFlag:false,\n            passwordError:'',\n            contactErrorFlag: false,\n            confirmPasswordErrorFlag: false,\n            emailIdErrorFlag: false,\n            isRegisterSuccess: false\n        }\n    },\n    methods:{\n        registerNewSeller(){\n            this.nameErrorFlag = false;\n            this.emailIdErrorFlag=false;\n            this.contactErrorFlag=false;\n            this.emailIdErrorFlag=false;\n            this.checkPassword=false;\n            this.passwordErrorFlag=false;\n            this.confirmPasswordErrorFlag=false;\n            this.passwordError='';\n            this.addressErrorFlag=false\n            if(this.seller.name.length < 5){\n                this.nameErrorFlag = true;\n                // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n                return;\n            }\n           \n            console.log(this.seller.emailId)\n            if(this.seller.emailId==' '|| this.seller.emailId.includes('@gmail.com') === false){\n                this.emailIdErrorFlag = true;\n               // setInterval(()=>{ this.emailIdErrorFlag = false; }, 2000);\n                return;\n            }\n            if(this.seller.contact.length !== 10){\n                this.contactErrorFlag = true;\n                setInterval(()=>{ this.contactErrorFlag = false; }, 2000);\n                return;\n            }\n            if(this.seller.address.length < 5){\n                this.addressErrorFlag = true;\n                // setInterval(()=>{ this.nameErrorFlag = false; }, 2000);\n                return;\n            }\n            if(this.seller.password<5)\n            {\n                this.passwordErrorFlag=true\n                this.passwordError=\"Give strong password\"\n                return\n            }\n            if(this.checkPassword != this.seller.password){\n                \n                this.confirmPasswordErrorFlag = true;\n                this.passwordError=\"does not match\"\n                setInterval(()=>{ this.confirmPasswordErrorFlag = false; }, 2000);\n                return;\n            }else if(this.seller.emailId.includes('@gmail.com')\n                    && this.seller.contact.length === 10 \n                    && this.checkPassword === this.seller.password){\n                       \n                this.contactErrorFlag = this.passwordErrorFlag = false;\n                this.$store.dispatch('REGISTER_NEW_SELLER', {\n                    sucess: (response)=>{\n                        console.log(response);\n                        this.isRegisterSuccess = true;\n                        setInterval(()=>{\n                            this.isRegisterSuccess = false;\n                        }, 3000);\n                        this.resetFields();\n                    },\n                    error: (err)=>{\n                        console.warn(\"New Merchant could not be registered. | \" + err);\n                    },\n                    seller: this.seller\n                })\n            }\n        },\n        resetFields(){\n            this.seller = {\n                name: '',\n                emailId: '',\n                contact: '',\n                address: '',\n                password: ''\n            };\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}