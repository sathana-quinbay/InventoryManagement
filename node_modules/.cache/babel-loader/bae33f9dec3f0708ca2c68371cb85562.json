{"ast":null,"code":"// import SellerProductsComponent from  './SellerProductComponent.vue'\n// import AddProductComponent from  './AddProductComponent.vue'\nimport { mapGetters } from 'vuex';\nimport OpenProductComponent from '@/components/OpenProductComponent.vue';\nimport { deleteProduct } from '@/service/SellerProductService';\nexport default {\n  name: \"ProductTableComponent\",\n  computed: { ...mapGetters({\n      sellerproductlist: 'getSellerproducts'\n    }),\n\n    getListCount() {\n      return this.sellerproductlist.length;\n    },\n\n    sortedData() {\n      console.log(this.sellerproductlist); // var MyData = {... this.sellerproductlist}\n      // MyData.sort(this.dynamicSort(\"productName\"));\n      // console.log(MyData)\n\n      return this.sellerproductlist.length;\n    }\n\n  },\n  watch: {\n    search() {\n      this.findData();\n    },\n\n    sortBy() {\n      this.sortData();\n    }\n\n  },\n\n  created() {\n    const userId = localStorage.getItem('userId');\n    console.log(\"inside created\");\n    console.log(userId);\n    this.$store.dispatch('getsellerproductsfromservice', userId);\n  },\n\n  components: {\n    OpenProductComponent\n  },\n\n  data() {\n    return {\n      fields: [{\n        key: 'imageUrl',\n        sortable: false\n      }, {\n        key: 'productName',\n        sortable: false\n      }, {\n        key: 'category',\n        sortable: false\n      }, {\n        key: 'price',\n        sortable: false\n      }, {\n        key: 'quantity',\n        sortable: false\n      }, {\n        key: 'action',\n        sortable: false\n      }],\n      modalShow: false,\n      product: [],\n      search: \"\",\n      deleteItem: '',\n      sortBy: []\n    };\n  },\n\n  mounted() {\n    console.log(\"inside mounteed\");\n    console.log(this.sellerproductlist); // var MyData = {... this.sellerproductlist}\n    // MyData.sort(this.dynamicSort(\"ame\"));\n    // Display data with new order !\n    // console.log(MyData);\n  },\n\n  methods: {\n    dynamicSort(property) {\n      var sortOrder = 1;\n\n      if (property[0] === \"-\") {\n        sortOrder = -1;\n        property = property.substr(1);\n      }\n\n      return function (a, b) {\n        if (sortOrder == -1) {\n          return b[property].localeCompare(a[property]);\n        } else {\n          return a[property].localeCompare(b[property]);\n        }\n      };\n    },\n\n    findData() {\n      console.log(\"doind\");\n      var payload = {\n        sellerId: localStorage.getItem('userId'),\n        searchValue: this.search\n      };\n      this.$store.dispatch('searchProductServiceCall', payload);\n    },\n\n    showModal(item) {\n      this.$refs[\"my-modal\"].show();\n      this.deleteItem = item;\n      console.log(\"delete item\", this.deleteItem);\n    },\n\n    hideModal() {\n      this.$refs[\"my-modal\"].hide();\n    },\n\n    sortData() {\n      console.log(this.sortBy);\n      const sellerid = localStorage.getItem('userId');\n      var sortBy = this.sortBy;\n      this.search = \"\";\n      console.log(\"contaier\", sortBy);\n      this.$store.dispatch('sortSellerProducts', {\n        sellerid,\n        sortBy\n      });\n    },\n\n    editProduct(item) {\n      this.modalShow = true;\n      this.product = { ...item\n      };\n      console.log(\"edited\", this.product);\n    },\n\n    removeModal() {\n      const userId = localStorage.getItem('userId');\n      this.$store.dispatch('getsellerproductsfromservice', userId);\n      this.modalShow = false;\n    },\n\n    deleteProductFunction() {\n      var product = this.deleteItem;\n      console.log(\"products\", product);\n      deleteProduct({\n        success: ({\n          data\n        }) => {\n          console.log(\"success delete\");\n\n          if (data.status_code == 200) {\n            console.log(\"inside code\");\n            const userId = localStorage.getItem('userId');\n            console.log(\"inside created\");\n            console.log(userId); // this.$store.dispatch('getsellerproductsfromservice', userId);\n\n            this.findData();\n            this.deleteItem = '';\n          }\n\n          console.log(data);\n          this.hideModal();\n        },\n        error: e => {\n          console.warn(e);\n        },\n        payload: product\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6NA;AACA;AACA;AACA;AACA;AACA;EACAA,6BADA;EAEAC,UACA,EACA;MACAC;IADA,EADA;;IAIAC,eACA;MACA;IACA,CAPA;;IAQAC,aACA;MACAC,oCADA,CAEA;MACA;MACA;;MACA;IACA;;EAfA,CAHA;EAoBAC;IACAC,SACA;MACA;IACA,CAJA;;IAKAC,SACA;MACA;IAEA;;EATA,CApBA;;EA+BAC,UACA;IACA;IACAJ;IACAA;IACA;EACA,CArCA;;EAsCAK;IACAC;EADA,CAtCA;;EA0CAC,OACA;IACA;MACAC,SACA;QAAAC;QAAAC;MAAA,CADA,EAEA;QAAAD;QAAAC;MAAA,CAFA,EAGA;QAAAD;QAAAC;MAAA,CAHA,EAIA;QAAAD;QAAAC;MAAA,CAJA,EAKA;QAAAD;QAAAC;MAAA,CALA,EAOA;QAAAD;QAAAC;MAAA,CAPA,CADA;MAWAC,gBAXA;MAYAC,WAZA;MAaAV,UAbA;MAcAW,cAdA;MAeAV;IAfA;EAoBA,CAhEA;;EAkEAW;IACAd;IACAA,oCAFA,CAGA;IACA;IAEA;IACA;EACA,CA1EA;;EA2EAe;IACAC;MACA;;MAEA;QACAC;QACAC;MACA;;MAEA;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA,CANA;IAOA,CAhBA;;IAiBAC,WACA;MACAnB;MACA;QACAoB,wCADA;QAEAC;MAFA;MAKA;IAEA,CA3BA;;IA4BAC;MACA;MACA;MACAtB;IACA,CAhCA;;IAiCAuB;MACA;IAGA,CArCA;;IAsCAC,WACA;MACAxB;MACA;MACA;MACA;MACAA;MACA;QAAAyB;QAAAtB;MAAA;IACA,CA9CA;;IA+CAuB,kBACA;MACA;MACA;MAAA;MACA1B;IACA,CApDA;;IAqDA2B,cACA;MACA;MACA;MACA;IACA,CA1DA;;IA2DAC,wBACA;MACA;MACA5B;MACA6B;QAEAC;UAAAvB;QAAA;UAEAP;;UACA,6BACA;YACAA;YACA;YACAA;YACAA,oBAJA,CAKA;;YACA;YACA;UAEA;;UACAA;UACA;QAEA,CAnBA;QAoBA+B;UAEA/B;QACA,CAvBA;QAwBAgC;MAxBA;IA2BA;;EA1FA;AA3EA","names":["name","computed","sellerproductlist","getListCount","sortedData","console","watch","search","sortBy","created","components","OpenProductComponent","data","fields","key","sortable","modalShow","product","deleteItem","mounted","methods","dynamicSort","sortOrder","property","findData","sellerId","searchValue","showModal","hideModal","sortData","sellerid","editProduct","removeModal","deleteProductFunction","deleteProduct","success","error","payload"],"sourceRoot":"src/components","sources":["ProductTableComponent.vue"],"sourcesContent":["<template>\n     <div class=\"main-body\">\n   \n         \n      \n    <div class=\"main-card\">\n    \n  \n<div class=\"dropdown\">\n  <b-icon-filter-circle-fill class=\"filtericon\"></b-icon-filter-circle-fill>\n  <div class=\"dropdown-content\">\n    <li><button @click=\"sortBy='name'\">Name</button></li>\n    <li><button @click=\"sortBy='price'\">Price</button></li>\n  </div>\n</div>\n    \n       <input class=\"searchButton\" type=\"text\" v-model=\"search\">\n     <button class=\"searchIcon\"  @click=\"findData()\">\n      <b-icon icon=\"search\"></b-icon>\n     </button>\n  \n    \n        \n        <div v-if=\"getListCount==0\"  class=\"notfound\">\n                 <img class=\"notFoundImg\" src=\"../assets/notfound.png\" alt=\"imageNoutFound\"/>\n               </div>\n               <b-table  v-else id=\"dataTable\"  sticky-header height=\"700\" responsive :fields=\"fields\" :items=\"sellerproductlist\">\n          <template #cell(imageUrl)=\"item\">\n               <img class=\"imageMain\" :src=\"item.item.imageUrl\" alt=\"Not found\">\n          </template>\n          <template #cell(action)=\"item\">\n           <button class=\"editIcon\" @click=\"editProduct(item.item)\"> <b-icon-eye></b-icon-eye></button>\n            <button class=\"deleteIcon\" @click=\"showModal(item.item)\"> <b-icon-trash-fill></b-icon-trash-fill></button>\n          </template>\n            \n        </b-table>\n    </div>\n      <b-modal ref=\"my-modal\" hide-footer title=\"Your account will be Deleted\">\n      <div class=\"d-block text-center\">\n       \n      </div>\n      <div class=\"button-group\">\n <b-button class=\"mt-3 reactivate-button\" variant=\"outline-primary\" block @click=\"deleteProductFunction\">Yes</b-button>\n      <b-button class=\"mt-3\" variant=\"outline-danger\" block @click=\"hideModal\">No</b-button>\n     \n      </div>\n      \n    </b-modal>\n       <div v-if=\"modalShow\">\n      <OpenProductComponent\n        :productItem=\"product\"\n        @hideModal=\"removeModal\"\n        :timeStamp=\"new Date().getTime()\"\n        :modalShowProp=\"(modalShow = true)\"\n      />\n    </div>\n     </div>\n</template>\n<style scoped>\n.imageMain\n{\n \nbackground-image:url('https://phulbanimunicipality.nic.in/wards.php');\n}\n.filtericon\n{\n  font-size: 30px;\n}\n.dropdown {\n  position: relative;\n  display: inline-block;\n  margin-right:20px ;\n}\nli{\n  list-style-type: none;\n}\n.notfound\n{\n  margin-top:3%;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n}\nli:hover{\n  color: black;\n}\nli button{\n  background: none;\n  border: none;\n}\n.button-group\n{\n  display: flex;\n  justify-content: space-around;\n}\n.dropdown-content {\n  display: none;\n\n  position: absolute;\n  background-color: #f9f9f9;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  padding: 12px 16px;\n  z-index: 100;\n}\n\n.dropdown:hover .dropdown-content {\n  display: block;\n}\n.imageMain\n{\n  width: 100px;\n  height: 100px;\n}\n.searchButton\n{\n      background: 0 0;\n    height: 40px;\n    border: 1px solid rgba(145,158,171,.32);\n    width: 200px;\n    border-radius: 5px;\n    padding: 0 15px 0 30px;\n}\n.editIcon,.deleteIcon\n{\n  background: none;\n  border: none;\n  margin-left: 2%;\n  cursor: pointer;\n}\n.editIcon{\n  color: green;\n}\n.deleteIcon\n{\n  color:red\n}\n@media screen and (max-width:600px) {\n  img.notFoundImg {\n    width: 100%;\n}\n.searchButton {\n    background: 0 0;\n    height: 40px;\n    border: 1px solid rgba(145,158,171,.32);\n    width: 140px;\n    border-radius: 5px;\n    padding: 0 15px 0 30px;\n}\n .submitButton{\n    min-width: 101px;\n    float: right;\n    background: #ff9f43;\n    color: #fff;\n    font-size: 14px;\n    border: none;\n    border-radius: 10px;\n    font-weight: 700;\n    padding: 4px 10px;\n}\n  \n}\n.b-table-sticky-header {\n    overflow-y: auto;\n    max-height: 600px;\n}\n.shortHeight\n{\n  max-height: 20px;\n}\n.main-card{\n  margin: 0 0 25px;\n  margin-top:2%;\n \n  border: 1px solid #e8ebed;\n  border-radius: 6px;\n  background: white;\n  padding: 20px;\n}\n.searchIcon\n{\n  background: none;\n  border: none;\n  font-size: 20px;\n  margin-left: 10px;\n}\n.main-body {\n  padding: 1% 2%;\n  background: #fafbfe;\n  padding: 1%;\n  text-align: left;\n   height: 100vh;\n  font-family: sans-serif;\n}\n.page-headers h4 {\n  font-weight: 700;\n  color: #212b36;\n\n  font-size: 18px;\n}\n.submitButton\n{\n    min-width: 120px;\n    float: right;\n  background: #ff9f43;\n  color: #fff;\n  font-size: 14px;\n  border: none;\n  border-radius: 10px;\n  font-weight: 700;\n  padding: 14px 10px;\n \n\n}\n.page-headers h6 {\n  font-size: 14px;\n  color: #555;\n  font-weight: 400;\n}\n</style>\n<script>\n// import SellerProductsComponent from  './SellerProductComponent.vue'\n// import AddProductComponent from  './AddProductComponent.vue'\nimport { mapGetters } from 'vuex';\nimport OpenProductComponent from '@/components/OpenProductComponent.vue'\nimport {deleteProduct} from '@/service/SellerProductService'\nexport default {\n    name:\"ProductTableComponent\",\n      computed:\n  {\n      ...mapGetters({\n        sellerproductlist:'getSellerproducts'\n      }),\n      getListCount()\n      {\n        return this.sellerproductlist.length\n      },\n      sortedData()\n      {\n                  console.log(this.sellerproductlist)\n        // var MyData = {... this.sellerproductlist}\n        // MyData.sort(this.dynamicSort(\"productName\"));\n        // console.log(MyData)\n        return this.sellerproductlist.length\n      }\n  },\n  watch:{\n    search()\n    {\n      this.findData()\n    },\n    sortBy()\n    {\n        this.sortData()\n        \n    }\n  },\ncreated()\n  {\n    const userId = localStorage.getItem('userId');\n    console.log(\"inside created\")\n    console.log(userId)\n      this.$store.dispatch('getsellerproductsfromservice', userId);\n  },\n  components:{\n  OpenProductComponent,\n \n },\n    data()\n    {\n        return {\n           fields: [\n            {key:'imageUrl',sortable:false},\n          { key: 'productName', sortable: false },\n          { key: 'category', sortable: false },\n          { key: 'price', sortable: false },\n          {key:'quantity',sortable:false},\n         \n {key:'action',sortable:false}\n\n        ],\n           modalShow:false,\n           product:[],\n           search:\"\",\n           deleteItem:'',\n            sortBy:[],\n      \n      \n            \n        }\n    },\n\n    mounted(){\n        console.log(\"inside mounteed\");\n        console.log(this.sellerproductlist)\n        // var MyData = {... this.sellerproductlist}\n        // MyData.sort(this.dynamicSort(\"ame\"));\n\n// Display data with new order !\n// console.log(MyData);\n    },\n    methods:{\n      dynamicSort(property) {\n    var sortOrder = 1;\n\n    if(property[0] === \"-\") {\n        sortOrder = -1;\n        property = property.substr(1);\n    }\n\n    return function (a,b) {\n        if(sortOrder == -1){\n            return b[property].localeCompare(a[property]);\n        }else{\n            return a[property].localeCompare(b[property]);\n        }        \n    }\n},\n      findData()\n    {\n      console.log(\"doind\")\n      var payload={\n        sellerId:localStorage.getItem('userId'),\n        searchValue:this.search\n      }\n\n      this.$store.dispatch('searchProductServiceCall',payload)\n      \n    },\n    showModal(item) {\n      this.$refs[\"my-modal\"].show();\n      this.deleteItem=item\n      console.log(\"delete item\",this.deleteItem)\n    },\n    hideModal() {\n      this.$refs[\"my-modal\"].hide();\n      \n      \n    },\n    sortData()\n    {\n    console.log(this.sortBy)\n    const sellerid = localStorage.getItem('userId');\n    var sortBy=this.sortBy\n    this.search=\"\"\n    console.log(\"contaier\",sortBy)\n    this.$store.dispatch('sortSellerProducts',{sellerid,sortBy});\n    },\n      editProduct(item)\n      {\n          this.modalShow=true;\n          this.product={... item}\n          console.log(\"edited\",this.product)\n      },\n      removeModal()\n      {\n        const userId = localStorage.getItem('userId');\n         this.$store.dispatch('getsellerproductsfromservice', userId);\n        this.modalShow = false\n      },\n      deleteProductFunction()\n    {\n      var product = this.deleteItem\n      console.log(\"products\",product)\n       deleteProduct({\n           \n        success: ({ data }) => {\n            \n            console.log(\"success delete\")\n            if(data.status_code==200)\n            {\n              console.log(\"inside code\")\n              const userId = localStorage.getItem('userId');\n              console.log(\"inside created\")\n              console.log(userId)\n                // this.$store.dispatch('getsellerproductsfromservice', userId);\n                this.findData()\n                this.deleteItem=''\n\n            }\n            console.log(data)\n            this.hideModal()\n        \n        },\n        error: (e) => {\n          \n            console.warn(e);\n        },\n        payload:product\n  \n    })\n    },\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}